openapi: '3.0.2'
info:
  title: API THEye
  description: "THEye backend server API description."
  termsOfService: https://theye.ch/en/terms
  version: '0.43.0'
  contact: 
    name: FiveCo Innovative Engineering
    url: https://www.fiveco.ch
    email: info@fiveco.ch
servers:
  - url: https://backend.theye.ch/api/v0
    description: Official production server
    variables:
      port:
        default: "443"
      basePath:
        default: v0
  - url: https://staging.backend.theye.ch/api/v0
    description: Official staging server
    variables:
      port:
        default: "443"
      basePath:
        default: v0
  - url: http://localhost:8000/api/v0
    description: Local development server
    variables:
      port:
        default: "8000"
      basePath:
        default: v0

components:
  schemas:
    api-version:
      type: object
      properties:
        server_version:
          type: string
          format: semantic version number
          example: '1.2.3'
        api_version:
          type: string
          format: semantic version number
          example: '1.2.3'
        status:
          $ref: '#/components/schemas/status'
    signup:
      type: object
      properties:
        first_name:
          type: string
          example: Alice
        last_name:
          type: string
          example: Wonderland
        password:
          type: string
          example: SecretPa55word 
        company:
          type: string
          example: Inc. 
        signup_token:
          type: string
          format: string
          example: 'fkSF00jawdsf' 
        checkout:
          type: object
          $ref: '#/components/schemas/signup-checkout-session'
    signup-checkout-session:
      type: object
      properties:
        price_id:
          type: string
          example: price_fkdalj2o3ijsf
        quantity:
          type: number 
          example: 10 
        client_id:
          type: string 
          example: fdkslafjlak 
        redirect_uri_success:
          type: string
          example: http://localhost/checkout/success 
          description: It must be registered as non_sensitive_redirect_uris.
        redirect_uri_cancel:
          type: string
          example: http://localhost/checkout/cancel 
          description: It must be registered as non_sensitive_redirect_uri.
    signup-checkout-url:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        checkout_url:
          type: string
          example: https://example.com 
    signup-mail:
      type: object
      properties:
        email:
          format:  email
          example: alice.wonderland@mail.com
        client_id:
          type: string
          example: 'fkSF00jawdsf' 
        recaptcha_token:
          type: string
          example: 'feskaflelgj' 
        redirect_uri:
          type: string
          example: http://localhost/signup/mail-verified 
          description: It must be registered as sensitive_redirect_uri.
    status:
      type: object
      readOnly: True
      properties:
        code:
          type: string
          example: 400-000
        name:
          type: string
          format: string
          example: STATUS_NAME 
        description:
          type: string
          format: string
          example: Lorem ipsum. 
    status-response:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
    my-client-configuration:
      type: object
      properties:
        version:
          type: string 
          example: '1.2.3'
        configuration:
          type: object
          example: {'custom_property_1': '10', 'custom_property_2':'23'}
        status:
          $ref: '#/components/schemas/status'
    authority-code:
      type: object
      properties:
        key_id:
          type: integer
          example: 314 
        code: 
          type: string 
          format: base16
          maxLength: 16 
          minLength: 16 
          example: 0123456789ABCDEF
    authority-token:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
          readOnly: true
        token: 
          type: string
          format: base16
          maxLength: 48 
          minLength: 48 
          example: 00112233445566778899AABBCCDDEEFF0123456789ABCDEF
          readOnly: true
        status:
          $ref: '#/components/schemas/status'
    batch-item:
      type: object
      properties:
        id:
          type: integer
          example: 314 
        name:
          type: string
          example: Foo 
        description:
          type: string
          example: Bar. 
        note:
          type: string
          example: Lorem ipsum. 
        manufaturer:
          type: string
          example: The Manufacturer 
        manufacture_date:
          type: string
          format: yyyy-mm-dd
          example: "2021-01-18"
        creation_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
        assemblers:
          type: array
          items: 
            type: integer
          example: [1,3]
        ofc_salt_id:
          type: integer
          example: 314 
        size:
          type: integer
          example: 1000 
        configuration:
          type: string
          format: json
          example: {"foo":"bar"}
        is_active:
          type: boolean
          example: true 
    batch:
      $ref: '#/components/schemas/batch-item'
      properties:
        status:
          $ref: '#/components/schemas/status'
        
    batches:
      type: object
      properties:
        batches:
          type: array
          items:
            $ref: '#/components/schemas/batch-item'
        status:
          $ref: '#/components/schemas/status'

    batch-configuration:
      type: object
      properties:
        id:
          type: integer
          example: 314 
        name:
          type: string
          example: Foo 
        ofc_salt_id:
          type: integer
          example: 314 
        configuration:
          type: string
          format: json
          example: "{'foo':'bar'}"
        size:
          type: integer
          example: 1000 
        recorded_devices:
          type: array
          items:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
          example: ["0123456789AB", "001122334455"]
        note:
          type: string
          example: some note
        manufacturer:
          type: string
          example: Eurocircuits
        manufacture_date:
          type: string
          format: date
          example: 2021-01-18
        status:
          $ref: '#/components/schemas/status'
    record:
      type: object
      properties:
        id:
          type: integer
          example: 314 
          readOnly: true
        creation_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        record:
          type: string
          format: json
          example: {"foo":"bar"}
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: "0123456789AB"
        batch_id:
          type: integer
          example: 314
        creator_email:
          type: string
          format: email
          example: alice.wonderland@mail.com
          readOnly: true
    records:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/record'
        status:
          $ref: '#/components/schemas/status'
    contact:
      type: object
      properties:
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
        subject:
          type: string
          maxLength: 255 
          example: Quote request
        body:
          type: string
          maxLength: 5000
          example: Lorem ipsum. 
        first_name:
          type: string
          maxLength: 255 
          example: Alice
        last_name:
          type: string
          maxLength: 255 
          example: Wonderland
        company:
          type: string
          maxLength: 255 
          example: Foo Inc. 
        recaptcha_token: 
          type: string
          maxLength: 255
    checkout-session:
      type: object
      properties:
        price_id:
          type: string
          example: price_fkdalj2o3ijsf
        quantity:
          type: number 
          example: 10 
        redirect_uri_success:
          type: string
          example: http://localhost/checkout/success 
          description: It must be registered as non_sensitive_redirect_uri.
        redirect_uri_cancel:
          type: string
          example: http://localhost/checkout/cancel 
          description: It must be registered as non_sensitive_redirect_uri.
        
    checkout-session-url:
      type: object
      properties:
        checkout_url:
          type: string
          example: https://example.com 
        status:
          $ref: '#/components/schemas/status'
    check-synchronization:
      type: object
      properties:
        time_id:
          type: integer 
          example: 314 
    device:
      type: object
      properties:
        id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
          readOnly: true
        creation_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        modification_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        name:
          type: string
          example: Device A
        owner:
          type: integer 
          example: 1 
          readOnly: true
        type:
          type: integer
          example: 10
          readOnly: true
        model:
          type: integer
          example: 11
          readOnly: true
        hardware:
          type: string
          example: 2.3
          readOnly: True
        is_active:
          type: boolean
          example: true
          readOnly: true
        device_info:
          type: object
          readOnly: true
          properties:
            creation_date:
              type: string
              format: iso-8601
              example: 2021-01-18T16:32:10.000000Z
              readOnly: true
            api_version:
              type: string
              format: semantic version number
              example: '1.2.3'
            info:
              type: object
              readOnly: true
              properties:
                info_version:
                  type: integer
                  example: 0
                type:
                  type: integer
                  example: 10
                model:
                  type: integer
                  example: 11
                firmware:
                  type: string
                  example: 1.2
                hardware:
                  type: string
                  example: 2.3
                device_id:
                  type: string 
                  format: base16
                  maxLength: 12 
                  minLength: 12 
                  example: 0123456789AB 
                time_id:
                  type: integer
                  example: "123456"
                local_name:
                  type: string
                  maxLength: 16
                  example: Kitchen
                battery_voltage:
                  type: integer
                  description: Battery voltage in mV [V]
                  example: "3300"
                log_interval:
                  type: object
                  properties:
                    interval:
                      type: integer 
                      description: Interval time in [s]
                      example: 10
                    stop_recording:
                      type: boolean
                      example: false
                    stop_memory_full:
                      type: boolean
                      example: true
                limits:
                  type: object
                  properties:
                    thresholds:
                      type: object
                      properties:
                        lowest_temperature:
                          type: integer
                          description: Temperature in 0.01 [°C] 
                        highest_temperature:
                          type: integer
                          description: Temperature in 0.01 [°C]
                        lowest_humidity:
                          type: integer
                          description: Humidity in 0.01 [%]
                        highest_humidity:
                          type: integer
                          description: Humidity in 0.01 [%]
                    alerts:
                      type: object
                      properties:
                        current_temperature:
                          type: boolean
                        past_temperature:
                          type: boolean
                        past_temperature_resettable:
                          type: boolean
                        current_humidity:
                          type: boolean
                        past_humidity:
                          type: boolean
                        past_humidity_resettable:
                          type: boolean
                    config:
                      type: object
                      properties:
                        hidden:
                          type: boolean
                        tested:
                          type: boolean
        status:
          $ref: '#/components/schemas/status'
    devices:
      type: object
      properties:
        devices:
          type: array
          items:
            type: object
            properties:
              id:
                type: string 
                format: base16
                maxLength: 12 
                minLength: 12 
                example: 0123456789AB 
                readOnly: true
              name:
                type: string
                example: Device A
              owner:
                type: object
                properties:
                  id:
                    type: integer 
                    example: 1 
                    readOnly: true
                  first_name:
                    type: string
                    example: Alice
                  last_name:
                    type: string
                    example: Wonderland
              not_viewed_logs_count:
                description: number of logs from this device the requesting user hasn't seen since the last modification 
                type: int
                example: 3
              type:
                type: integer
                example: 10
                readOnly: true
              model:
                type: integer
                example: 11
                readOnly: true
              hardware:
                type: string
                example: "2.3"
                readOnly: True
              battery_voltage:
                type: integer
                description: Battery voltage in mV [V]
                example: "3300"
              firmware:
                type: string
                example: "1.2"
              organization:
                type: object
                properties:
                  id:
                    type: integer
                    example: 11
                    readOnly: true
                  name:
                    type: string
                    example: Company X 
        status:  
          $ref: '#/components/schemas/status'
    device-public-info:
      type: object
      properties:
        is_free:
          type: boolean
          example: True
        log:
          type: object
          properties:
            start_time_id:
              type: number 
              example: 3141592 
            head_page_time_id:
              type: number 
              example: 3200000
            need_synchronization:
              type: boolean
              example: true
        status:
          $ref: '#/components/schemas/status'
    devices-summary:
      type: object
      properties:
        total:
          type: integer
          example: 62
        total_owner:
          type: integer
          example: 12 
        total_organization:
          type: integer
          example: 40 
        total_free:
          type: integer
          example: 10 
        owners:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                example : 314 
              total :
                type: integer
                example : 12 
        organizations:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                example : 315 
              total :
                type: integer
                example : 40 
        status:
          $ref: '#/components/schemas/status'
    task-status: #not sure if I need to modify this
      type: object
      properties:
        nonce:
          type: string 
          format: base16
          maxLength: 24 
          minLength: 24 
          example: 00112233445566778899AABB
          readOnly: true
        expires:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        progress:
          type: number
          minimum: 0.0
          maximum: 1.0
        finished:
          type: boolean
          default: false
        error:
          type: boolean
          default: false
        message:
          type: string
          description: Error reason
          example: Lorem ipsum
        status:
          $ref: '#/components/schemas/status'
    devices-concatenation:
      type: object
      properties:
        devices:
          description: Filter by device-id array.
          type: array
          items:
            type: string
            format: "001122334455"
            example: [0123456789AB] 
        start_date:
          description: 
            Restrict data to values after the start_date (inclusive). 
            If no value is provided, the start_date of the log is used.
          type: integer 
          format: Time in POSIX 
          example: 12345678
        end_date:
          description: 
            Restrict data to values before the end_date (inclusive). 
            If no value is provided, the end_date of the log is used.
          type: integer 
          format: Time in POSIX 
          example: 12345699
        include:
          description: Data to add to file (array with temperature and/or humidity)
          type: array
          items:
            type: string
            enum:
              - temperature
              - humidity
          default: ['temperature','humidity']
        file_type:
          description: File type to retrieve
          type: string
          enum:
            - csv
          default: csv
        time_correction:
          description: 
            Choose the type of time correction wanted on log data points
            time axis. Must be based on start and end dates of log data.
          type: string
          example: none
          enum:
            - none
            - step
            - linear
          default: none
    device-file: #not sure if I modified it correctly
      type: object
      properties:
        file:
          type: object
          description: "File required"
        status:
          $ref: '#/components/schemas/status'
    device-log-certificate: 
      type: object
      properties:
        start_date:
          description: 
            Restrict data to values after the start_date (inclusive). 
            If no value is provided, the start_date of the first log is used.
          type: integer 
          format: Time in POSIX 
          example: 12345678
        end_date:
          description: 
            Restrict data to values before the end_date (inclusive). 
            If no value is provided, the end_date of the last log is used.
          type: integer 
          format: Time in POSIX 
          example: 12345699
        include:
          description: Data to add to file (array with temperature and/or humidity)
          type: array
          items:
            type: string
            enum:
              - temperature
              - humidity
          default: ['temperature','humidity']
        time_correction:
          description: 
            Choose the type of time correction wanted on log data points
            time axis. Must be based on start and end dates of log data.
          type: string
          example: none
          enum:
            - none
            - step
            - linear
          default: none
        quantity:
          description:
            Restrict point quantity on the graph to less than the quantity parameter. 
            If no value is provided, the max default value is used (3600).
          type: int
          example: 3600
          default: 3600
        isRawData:
          description:
            Boolean to include or not the raw data table.
          type: bool
          default: False
    device-specification:
      type: object
      properties:
        name: 
          type: string
          example: 'TH-2'
          readOnly: true
        description:
          type: string
          example: 'Compact Bluetooth module for secure temperature and humidity recording.'
          readOnly: true
        type:
          type: integer 
          example: 52
          readOnly: true
        model: 
          type: integer
          example: 203
          readOnly: true
        hardware: 
          type: string 
          example: '3.1'
          readOnly: true
        is_active:
          type: boolean 
          example: true
          readOnly: true 
        voltage_low: 
          type: number
          example: 2600.0
          description: Lower voltage in [mV]
          readOnly: true
        voltage_high: 
          type: number
          example: 2900.0
          description: Higher voltage in [mV]
          readOnly: true
        percent_low: 
          type: number
          example: 20.0
          description: Lower value in [%]
          readOnly: true
        percent_high:
          type: number
          example: 80.0
          description: Higher value in [%]
          readOnly: true
        battery_capacity: 
          type: number
          example: 432.0
          description: Battery capacity in [mAh] 
          readOnly: true
        idle_current: 
          type: number
          example: 0.007 
          description: Idle current in [mA] 
          readOnly: true
        measurement_charge:
          type: number
          example: 0.01
          description: Electrical charge of one measurement in [mAs] 
          readOnly: true
        working_range:
          readOnly: true
          type: object
          properties:
            humidity:
              type: object
              properties:
                min:
                  type: number
                  example: 0 
                  description: Humidity min in [%RH] 
                max:
                  type: number
                  example: 100 
                  description: Humidity max in [%Rh] 
            temperature:
              type: object
              properties:
                min:
                  type: number
                  example: -40 
                  description: Temperature min in [°C] 
                max:
                  type: number
                  example: 100 
                  description: Temperature min in [°C] 
        sensor_parameters:
          readOnly: true
          type: object
          properties:
            humidity_accuracy:
              type: object
              properties:
                maximum:
                  type: object
                  properties:
                    humidity: 
                      type: array
                      example: [0, 10, 90, 100]
                      description: Abscissa (RH) in [%Rh] 
                    accuracy: 
                      type: array
                      example: [7.5, 4.5, 4.5, 7.5]
                      description: Ordinate (ΔRH) in [%Rh] 
                typical:
                  type: object
                  properties:
                    humidity: 
                      type: array
                      example: [0, 10,  90, 100] 
                      description: Abscissa (RH) in [%Rh] 
                    accuracy: 
                      type: array
                      example: [4, 2, 2, 4]
                      description: Ordinate (ΔRH) in [%Rh] 
            humidity_drift: 
              type: number
              example: 0.25
              description: Long term humidity drift in [%RH/year]
            temperature_accuracy:
              type: object
              properties:
                maximum:
                  type: object
                  properties:
                    temperature: 
                      type: array
                      example: [-40, 0, 65, 125]
                      description: Abscissa (T) in [°C] 
                    accuracy: 
                      type: array
                      example: [1, 0.4, 0.4, 1]
                      description: Ordinate (ΔT) in [°C] 
                typical:
                  type: object
                  properties:
                    temperature: 
                      type: array
                      example: [-40, 0, 65, 125]
                      description: Abscissa (T) in [%Rh] 
                    accuracy: 
                      type: array
                      example: [0.6, 0.2, 0.2, 0.6]
                      description: Ordinate (ΔT) in [%Rh] 
            tempertature_drift: 
              type: number
              example: 0.03
              description: Long term temperature drift in [°C/year]
            measure_conversion:
              type: object
              properties:
                temperature:
                  type: object
                  properties:
                    offset:
                      type: number
                      example: -45
                    factor_degree1: 
                      type: number
                      example: 0.08544921875
                    factor_degree2: 
                      type: number
                      example: 0
                humidity:
                  type: object
                  properties:
                    offset:
                      type: number
                      example: 0
                    factor_degree1: 
                      type: number
                      example: 0.048828125
                    factor_degree2: 
                      type: number
                      example: 0
    device-specifications:
      type: object
      properties:
        device_specifications: 
          type: array
          items:
            $ref: '#/components/schemas/device-specification'
        status:
          $ref: '#/components/schemas/status'
    elog:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        edata:
          type: string
          format: base64url 
          example: d3As065hUfzeLue21P69HxIix373+FLWtoMDru6PFdy9ZYLlD6yRuwEJCYAjhATu6LiJp340n7Imhhmmp5Xbm9ws7tKbGyGkxgG7GeJ8fak=
        hash:
          type: string 
          format: base16
          maxLength: 64 
          minLength: 64 
          example: 00112233445566778899AABBCCDDEEFF00112233445566778899AABBCCDDEEFF 
        initialization_vector:
          type: string 
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF 
        key_id:
          type: integer 
          example: 314 
    email-change:
      type: object
      properties:
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
        new_email:
          type: string
          format:  email
          example: bob.sponge@mail.com
        redirect_uri:
          type: string
          example: https://example.com 
          description: It must be registered as non_sensitive_redirect_uris
    encrypted_data:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        encrypted_data:
          type: string
          format: base64url 
          example: d3As065hUfzeLue21P69HxIix373+FLWtoMDru6PFdy9ZYLlD6yRuwEJCYAjhATu6LiJp340n7Imhhmmp5Xbm9ws7tKbGyGkxgG7GeJ8fak=
        hash:
          type: string 
          format: base16
          maxLength: 64 
          minLength: 64 
          example: 00112233445566778899AABBCCDDEEFF00112233445566778899AABBCCDDEEFF 
        initialization_vector:
          type: string 
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF 
        key_id:
          type: integer 
          example: 314 
    feature:
      type: object
      properties:
        max_devices:
          type: integer 
        max_organizations:
          type: integer 
        max_members:
          type: integer 
        data_history_seconds:
          type: integer 
        chart_superposition:
          type: boolean 
        email_new_data:
          type: boolean 
        alarm_system:
          type: boolean 
        data_export:
          type: boolean 
        signed_certificate:
          type: boolean 
        locking: 
          type: boolean 
    logs:
      type: object
      properties:
        logs:
          type: array
          items: 
            $ref: '#/components/schemas/log'
        status:
          $ref: '#/components/schemas/status'
    log:
      type: object
      properties:
        device_id:
          type: string
          format: hex48 
          example: 0123456789AB 
          readOnly: true
        time_interval:
          type: integer
          description: Interval between successive points in seconds.
          readOnly: true
        start_time_id:
          type: number 
          example: 314 
          readOnly: true
        name:
          type: string
          example: 'Packet A delivery.' 
          readOnly: false
        start_date:
          type: integer
          format: Time in POSIX 
          deprecated: true
          readOnly: true
        end_date:
          type: integer
          format: Time in POSIX 
          deprecated: true
          readOnly: true
        time_corrections:
          type: array
          items: 
            $ref: '#/components/schemas/log_time_correction'
        is_active:
          type: boolean
          example: true 
          readOnly: false
    log_time_correction:
      type: object
      properties:
        type:
          type: string
          example: "none"
          enum:
            - none
            - step
            - linear
        start_date:
          type: integer
          format: Time in POSIX 
        end_date:
          type: integer
          format: Time in POSIX 
    log_data:
      type: object
      properties:
        device_id:
          type: string
          format: hex48 
          example: 0123456789AB 
        start_time_id:
          type: integer
          example: 314 
        period:
          type: string
          example: minute 
        time_correction:
          type: string
          description: The time correction type used on the transmitted data.
          enum:
            - none
            - step
            - linear
          example: none
        temperature_mean:
          type: number 
          description: "The window (start_date, end_date) mean temperature."
          example: 25
        temperature_mkt:
          type: number 
          description: "The window (start_date, end_date) mean kinetic temperature."
          example: 25
        temperature_max:
          type: number 
          description: "The window (start_date, end_date) max temperature."
          example: 25.1 
        temperature_min:
          type: number 
          description: "The window (start_date, end_date) min temperature."
          example: 24.9 
        humidity_mean:
          type: number 
          description: "The window (start_date, end_date) mean humidity."
          example: 50 
        humidity_max:
          type: number 
          description: "The window (start_date, end_date) max humidity."
          example: 50.1 
        humidity_min:
          type: number 
          description: "The window (start_date, end_date) min humidity."
          example: 49.9 
        times:
          type: array
          items: 
            type: integer
            description: Time in POSIX 
          example:
            - 10
            - 70 
            - 130 
        temperatures:
          type: array
          items: 
            type: number 
            description: Temperature of the point (in [°C]) 
          example:
            - 25.00 
            - 25.10 
            - 24.90 
        temperatures_max:
          type: array
          items: 
            type: number 
            description: Temperature of the point (in [°C]) 
          example:
            - 25.00 
            - 25.10 
            - 24.90 
        temperatures_min:
          type: array
          items: 
            type: number 
            description: Temperature of the point (in [°C]) 
          example:
            - 25.00 
            - 25.10 
            - 24.90 
        humidities:
          type: array
          items: 
            type: number 
            description: Humidity of the point (in [%]) 
          example:
            - 50.00 
            - 50.10 
            - 49.90 
        humidities_max:
          type: array
          items: 
            type: number 
            description: Humidity of the point (in [%]) 
          example:
            - 50.00 
            - 50.10 
            - 49.90 
        humidities_min:
          type: array
          items: 
            type: number 
            description: Humidity of the point (in [%]) 
          example:
            - 50.00 
            - 50.10 
            - 49.90 
        missing_data_intervals:
          type: array
          description: List of times pair within no data is present
          items:
            type: array
            description: time pairs
            example: 
              - 1649721600
              - 1651190400
        new_pb_causes:
          type: object
          properties:
            start_new_log:
              type: array
              items:
                type: number
                description: Timestamps at wich a PageBlock was started because of the beginning of a new log
                example: 
                  - 1708532141
                  - 1708574369
            last_page_full:
              type: array
              items:
                type: number
                description: Timestamps at wich a PageBlock was started because the last PageBlock was full
                example: 
                  - 1708532141
                  - 1708574369
            proc_reset:
              type: array
              items:
                type: number
                description: Timestamps at wich a PageBlock was started because of a processor reset
                example: 
                  - 1708532141
                  - 1708574369
            sensor_reset:
              type: array
              items:
                type: number
                description: Timestamps at wich a PageBlock was started because of a sensor reset
                example: 
                  - 1708532141
                  - 1708574369
            bytes_corrupt:
              type: array
              items:
                type: number
                description: Timestamps at wich a PageBlock was started because of some corrupted bytes
                example: 
                  - 1708532141
                  - 1708574369
            other_causes:
              type: array
              items:
                type: object
                properties:
                  HC:
                    type: number
                    description: Header code, causes of the new page block
                    example: 0xC0
                  time:
                    type: number
                    description: Timestamps at wich a PageBlock was started because of this specific cause
                    example: 1708574369
        viewed:
          type: boolean
          example: true 
        device_infos:
          type: array
          items:
            type: object
            properties:
              time:
                type: number
                description: Timestamps at which this device info should be considered
                example: 1708532141
              info:
                type: object
                readOnly: true
                properties:
                  info_version:
                    type: integer
                    example: 0
                  type:
                    type: integer
                    example: 10
                  model:
                    type: integer
                    example: 11
                  firmware:
                    type: string
                    example: 1.2
                  hardware:
                    type: string
                    example: 2.3
                  device_id:
                    type: string 
                    format: base16
                    maxLength: 12 
                    minLength: 12 
                    example: 0123456789AB 
                  time_id:
                    type: integer
                    example: "123456"
                  local_name:
                    type: string
                    maxLength: 16
                    example: Kitchen
                  battery_voltage:
                    type: integer
                    description: Battery voltage in mV [V]
                    example: "3300"
                  log_interval:
                    type: object
                    properties:
                      interval:
                        type: integer 
                        description: Interval time in [s]
                        example: 10
                      stop_recording:
                        type: boolean
                        example: false
                      stop_memory_full:
                        type: boolean
                        example: true
                  limits:
                    type: object
                    properties:
                      thresholds:
                        type: object
                        properties:
                          lowest_temperature:
                            type: integer
                            description: Temperature in 0.01 [°C] 
                          highest_temperature:
                            type: integer
                            description: Temperature in 0.01 [°C]
                          lowest_humidity:
                            type: integer
                            description: Humidity in 0.01 [%]
                          highest_humidity:
                            type: integer
                            description: Humidity in 0.01 [%]
                      alerts:
                        type: object
                        properties:
                          current_temperature:
                            type: boolean
                          past_temperature:
                            type: boolean
                          past_temperature_resettable:
                            type: boolean
                          current_humidity:
                            type: boolean
                          past_humidity:
                            type: boolean
                          past_humidity_resettable:
                            type: boolean
                      config:
                        type: object
                        properties:
                          hidden:
                            type: boolean
                          tested:
                            type: boolean
        is_active:
          type: boolean
          example: true 
        status:
          $ref: '#/components/schemas/status'
    ownership-code:
      type: object
      properties:
        code: 
          type: string 
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF 
          readOnly: true
        expires:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
        status:
          $ref: '#/components/schemas/status'
          readOnly: true
    ownership-factory-code:
      type: object
      properties:
        device_id: 
          type: string 
          format: base16
          example: 0123456789AB
          readOnly: true
        code: 
          type: string 
          format: base16
          example: CDEF1011 
          readOnly: true
        salt_id:
          type: integer 
          example: 0
          readOnly: true
        status:
          $ref: '#/components/schemas/status'
      description: 
        'Data are encoded in big endian in QRCode.
        Example: device_code=0123456789AB and code=CDEF1011 become 
        AB89674523011110EFCD (AB:89:67:45:23:01 11:10:EF:CD) in QRCode.'

    ownership-token:
      type: object
      properties:
        key_id: 
          type: integer
          example: 314 
        ownership_token:
          type: string
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF
        ownership_factory_code:
          type: string
          format: base16
          maxLength: 8 
          minLength: 8 
          example: ABCDEF01
    password:
      type: object
      properties:
        password:
          type: string
          example: SecretPa55word 
        new_password:
          type: string
          example: NewSecretPa55word 
    password-reset:
      type: object
      properties:
        new_password:
          type: string
          example: NewSecretPa55word 
        password_token:
          type: string
          format: string
          example: 'fkSF00jawdsf' 
    password-reset-mail:
      type: object
      properties:
        email:
          format:  email
          example: alice.wonderland@mail.com
        client_id:
          type: string
          example: 'fkSF00jawdsf' 
        recaptcha_token:
          type: string
          example: 'feskaflelgj' 
        redirect_uri:
          type: string
          example: http://localhost/signup/mail-verified 
          description: It must be registered as sensitive_redirect_uri.
    plan:
      type: object
      properties:
        stripe_id:
          type: string 
          example: prod_loremipsum 
          readOnly: True
        name:
          type: string
          example: Pro 
        description:
          type: string
          example: Pro plan 
        display_order:
          type: integer 
          example: 10 
        features:
          type: object 
          $ref : '#/components/schemas/feature'
        prices:
          type: array
          items:
            type: object 
            $ref : '#/components/schemas/price'
    subscription-plans:
      type: object
      properties:
        subscription_plans:
          type: array
          items: 
            $ref : '#/components/schemas/plan' 
        status:
          $ref: '#/components/schemas/status'
    portal-session:
      type: object
      properties:
        redirect_uri:
          type: string
          example: https://example.com 
          description: It must be registered as non_sensitive_redirect_uris
    portal-session-url:
      type: object
      properties:
        portal_url:
          type: string
          example: https://example.com 
        status:
          $ref: '#/components/schemas/status'
    price:
      type: object
      properties:
        stripe_id:
          type: string 
          example: price_loremipsum 
          readOnly: True
        currency:
          type: string
          example: chf 
        interval:
          type: string
          example: month 
        interval_count:
          type: integer 
          example: 1 
        unit_amount:
          type: integer 
          example: 1 
    product:
      type: object
      properties:
        stripe_id:
          type: string 
          example: prod_loremipsum 
          readOnly: True
        name:
          type: string
          example: Pro 
        description:
          type: string
          example: Pro plan 
        display_order:
          type: integer 
          example: 10 
        features:
          type: object 
          $ref : '#/components/schemas/feature'
    subscription:
      type: object
      properties:
        stripe_id:
          type: string 
          example: prod_loremipsum 
          readOnly: True
        quantity:
          type: string 
          example: prod_loremipsum 
          readOnly: True
        cancel_at_period_end:
          type: boolean 
          example: False 
          readOnly: True
        current_period_start:
            type: integer
            description: Time in POSIX 
            example: 0 
            readOnly: True
        current_period_end:
            type: integer
            description: Time in POSIX 
            example: 0 
            readOnly: True
        price:
          type: object 
          $ref : '#/components/schemas/price'
        product:
          type: object 
          $ref : '#/components/schemas/product'
        status:
          $ref: '#/components/schemas/status'
    profile:
      type: object
      properties:
        id:
          type: integer
          example: 314
          readOnly: True
        company:
          type: string
          example: Inc. 
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
          readOnly: True
        first_name:
          type: string
          example: Alice
        last_name:
          type: string
          example: Wonderland
        unicode_locale_id:
          type: string
          format: unicode locale identifier
          description: https://unicode.org/reports/tr35/
          example: 'en-US'
        unit_system:
          type: string
          description: 
            "Can be either SI, IMPERIAL or USCS (International system of units,
            Imperial system of units or US Customary measurement system)."
          example: 'SI'
        currency:
          type: string
          example: chf 
          readOnly: True
        enable_elog_report:
          type: boolean
          description: "Set if an email is sent to user when new log data have been pushed to server."
        status:
          $ref: '#/components/schemas/status'
        enable_alarms_report:
          type: boolean
          description: Set if an email is sent to user when an new alarm is detected.
    profile-delete:
      type: object
      properties:
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
        password:
          type: string
          example: SecretPa55word 
    synchronization-nonce:
      type: object
      properties:
        nonce:
          type: string 
          format: base16
          maxLength: 24 
          minLength: 24 
          example: 00112233445566778899AABB
          readOnly: true
        expires:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        status:
          $ref: '#/components/schemas/status'
    synchronization-code:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        key_id:
          type: integer
          example: 314 
        synchronization_code: 
          type: string 
          format: base16 
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF
        status:
          $ref: '#/components/schemas/status'
    synchronization-token:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
          readOnly: true
        synchronization_token: 
          type: string
          format: base16 
          maxLength: 48 
          minLength: 48 
          example: 00112233445566778899AABBCCDDEEFF0123456789ABCDEF
          readOnly: true
        status:
          $ref: '#/components/schemas/status'
    synchronization-status:
      type: object
      properties:
        synchronized:
          type: boolean
          example: true 
          readOnly: true
        delta:
          type: integer
          example: 314
        status:
          $ref: '#/components/schemas/status'

  securitySchemes:
    theye_oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://backend.theye.ch/o/authorize'
          tokenUrl: 'https://backend.theye.ch/o/token'
          scopes:
            'openid': OpenId Connect scope
            'read': Can read 
            'write': Can write 
    theye_oidc:
      type: openIdConnect
      openIdConnectUrl: 'https://backend.theye.ch/o/.well-known/openid-configuration'

paths:
  /:
    get:
      description: Get THEye Server and API versions. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/api-version'
  /contact/:
    post:
      description: Post a contact formular. 
      requestBody:
        description: Contact 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/contact' 
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response'
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/:
    get:
      description: Get all devices of the user.
      parameters:
        - name: owner 
          in : query
          description: Filter by device owner.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: organization 
          in : query
          description: Filter by organization.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: free 
          in : query
          description: Filter by free device.
          schema:
            type: string 
            example: true 
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/devices' 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/set-all-logs-viewed/:
    put:
      description: Set all logs of a devicelist as viewed by a user.
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, device updated 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/devices'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/summary/:
    get:
      description: Get devices summary.
      parameters:
        - name: owner 
          in : query
          description: Filter by device owner.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: organization 
          in : query
          description: Filter by organization.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: free 
          in : query
          description: Filter by free device.
          schema:
            type: string 
            example: true 
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/devices-summary'
                  
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/concatenation/:
    post:
      description: Post concatenation file request. 
      requestBody:
        description: Encrypted device info 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/devices-concatenation' 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/task-status'                   
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/files/{nonce-id}/status/:
    get:
      description: Retrieve file creation task state
      parameters:
        - name: nonce-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 24 
            minLength: 24 
            example: 00112233445566778899AABB
            readOnly: true
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/task-status'                   
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/files/{nonce-id}/file/:
    get:
      description: Retrieve created file (status must be finished=true)
      parameters:
        - name: nonce-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 24 
            minLength: 24 
            example: 00112233445566778899AABB
            readOnly: true
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content: 
            text/csv:
              schema:
                format: file
            application/pdf:
              schema:
                format: file            
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
        '404':
          description: Not found (may be a bad nonce id)
  /devices/{device-id}/:
    get:
      description: Get device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    put:
      description: Put device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Data of the device to update
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/device' 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, device updated 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/logs/{start-time-id}/certificate/:
    post:
      description: Post certificate generation request. 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB
        - name: start-time-id 
          in: path
          required: true
          schema:
            type: integer 
            example: 314
      requestBody:
        description: Encrypted device info 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/device-log-certificate'
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/task-status'                   
        '401':
          description: Unauthorized.
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response'
  /devices/{device-id}/check-synchronization:
    put:
      description: Check wheter the device is synchronized with the server or not.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Current time id 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/check-synchronization' 
      responses:
        '200': 
          description: Ok, access-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/synchronization-status' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/compute-access-token:
    put:
      description: Compute and get the access token.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      responses:
        '200': 
          description: Ok, access-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized. 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/compute-configuration-token:
    put:
      description: Compute and get the configuration token.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      responses:
        '200': 
          description: Ok, configuration-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized. 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 

  /devices/{device-id}/compute-factory-access-token:
    put:
      description: Compute and get the factory access token.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      responses:
        '200': 
          description: Ok, factory-access-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/compute-factory-configuration-token:
    put:
      description: Compute and get the factory access token.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      responses:
        '200': 
          description: Ok, factory-configuration-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 

  /devices/{device-id}/compute-lock-token:
    put:
      description: Compute and get the device lock token.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Lock Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: Ok, lock-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/set-all-logs-viewed/:
    put:
      description: Set all logs of a single device as viewed by a user.
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, logs updated 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/logs'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/logs/:
    get:
      description: Get the list of logs of the device
      security:
        - theye_oauth:
          - read 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/logs'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/logs/{start-time-id}/:
    get:
      description: 
        Get the log data. If needed, the server will automtically adjust the 
        aggregation period to build a response containing less than the server
        max point setting. (1000 points)
      security:
        - theye_oauth:
          - read 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
        - name: start-time-id 
          in: path
          required: true
          schema:
            type: integer 
            example: 314
        - name: period
          in: query 
          description: 
            Set the aggregation period [second, minute, hour, day, month, year]
          schema:
            type: string 
            example: second 
            default: second 
        - name: start_date
          in: query 
          description: 
            Restrict data to values after the start_date (inclusive). 
            If no value is provided, the start_date of the log is used.
          schema:
            type: integer 
            format: Time in POSIX 
        - name: end_date
          in: query 
          description: 
            Restrict data to values before the end_date (inclusive). 
            If no value is provided, the end_date of the log is used.
          schema:
            type: integer 
            format: Time in POSIX 
        - name: quantity 
          in: query 
          description: 
            Restrict point quantity to less than the quantity parameter. 
            If no value is provided, the max default value is used (3600).
          schema:
            type: integer 
            format: Time in POSIX 
        - name: time_correction
          in: query
          description: 
            Choose the type of time correction wanted on log data points
            time axis. Must be based on start and end dates of log data.
          schema:
            type: string
            example: none
            enum:
              - none
              - step
              - linear
            default: none
        - name: interval_inf
          in: query 
          description: 
            Used to determine the start_date with which compute the stats.
            start_date (query) + interval_inf (query) = start_date of web graph.
            By default, equal interval_sup (if existing) or 0.
          schema:
            type: integer 
            format: Time in POSIX 
        - name: interval_sup
          in: query 
          description: 
            Used to determine the end_date with which compute the stats.
            end_date (query) - interval_sup (query) = end_date of web graph.
            By default, equal interval_inf (if existing) or 0.
          schema:
            type: integer 
            format: Time in POSIX 
        - name: stat_only
          in: query 
          description: 
            If True, only the stats are returned (min, max, mean, mkt).
          schema:
            type: boolean 
            default: False
        - name: activation_energy
          in: query 
          description: 
            Used to compute MKT. 'Activation energy H is the minimum amount of 
            energy that must be available to reactants for a chemical reaction 
            to occur'. Must be a positive value in J/mol. By default, use a 
            commonly used value in pharma.
          schema:
            type: float 
            default: 83144.72

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/log_data'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    put:
      description: Put Log.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
        - name: start-time-id 
          in: path
          required: true
          schema:
            type: integer 
            example: 314
      requestBody:
        description: Data of the log to update
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/log' 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, log updated 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/log' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response'
  /devices/{device-id}/own:
     put:
      description: Own the device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Owneship token 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/ownership-token' 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, ownership granted. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '201': 
          description: Ok, ownership granted and device created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/ownership-factory-code/:
    get:
      description: Get the ownership factory code of the device
      security:
        - theye_oauth:
          - read 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
          
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/ownership-factory-code'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/release:
     put:
      description: Release ownership of the device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, ownership released. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/public-info/:
     get:
      description: Get public info about the device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      responses:
        '200': 
          description: Ok. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device-public-info' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /device-info/:
    post:
      description: Post encrypted device info. 
      requestBody:
        description: Encrypted device info 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/encrypted_data' 
      responses:
        '201':
          description: Created 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /discovery/device-specifications/:
    get:
      description: Get device specification list. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device-specifications'
  /discovery/status/:
    get:
      description: Get status list. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : '#/components/schemas/status'
  /my-client-configuration/:
    get: 
      description: Get the client configuration of the current user and the current application. 
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/my-client-configuration' 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    put: 
      description: Create or update the client configuration of the current user and the current application. 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Configuration data 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/my-client-configuration' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/my-client-configuration' 
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/my-client-configuration' 
        '401':
          description: Unauthorized.
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 

  /elog/:
    put:
      description: Put encrypted log
      requestBody:
        description: Encrypted data 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/elog' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /ownership-code/: 
    post:
      description: Create and get an ownership code. 
      security:
        - theye_oauth:
          - write 
      responses:
        '201': 
          description: Ok, ownership code created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/ownership-code' 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /password-reset:
    put:
      description: Password reset.  
      requestBody:
        description: Password reset parameters. 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/password-reset' 
      responses:
        '200':
          description: Password updated. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /password-reset/email/:
    post:
      description: Create a password reset action and send a password reset link to the given email address. 
      requestBody:
        description: Password reset parameters 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/password-reset-mail' 
      responses:
        '202':
          description: Password reset send email accepted. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /production/batches/:
    get:
      description: Get production batches.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/batches' 
        '401':
          description: Unauthorized 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /production/batches/{batch_id}/:
    get:
      description: Get production batch.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/batch' 
        '401':
          description: Unauthorized 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not Found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /production/batches/{batch_id}/configuration/:
    get:
      description: Get production batch configuration.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/batch-configuration' 
        '401':
          description: Unauthorized 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not Found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /production/records/:
    get:
      description: Get production records.
      security:
        - theye_oauth:
          - read 
      parameters:
        - name: batch 
          in : query
          description: Filter by batch id.
          schema:
            type: array
            items:
              type: integer
              example: 314
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/records' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    post:
      description: Create a production record. 
      security:
        - theye_oauth:
          - write
      requestBody:
        description: Record 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/record' 
      responses:
        '201':
          description: Created 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /profile/:
    get:
      description: Get user profile.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/profile' 
        '401':
          description: Unauthorized 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    put:
      description: Update the user profile.
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Data of the profile to update
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/profile' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/profile' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /profile/delete:
    put:
      description: Delete the user.
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: User credentials.
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/profile-delete' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 

  /profile/email/:
    post:
      description: Create a email change action. 
      security:
        - theye_oauth:
          - write
      requestBody:
        description: Email change request 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/email-change' 
      responses:
        '202':
          description: Email change send email accepted. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /profile/password/:
    put:
      description: Update the user password. 
      security:
        - theye_oauth:
          - write
      requestBody:
        description: Passwords 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/password' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /signup/:
    post:
      description: Signup  
      requestBody:
        description: User informations 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/signup' 
      responses:
        '201':
          description: Created. 
          content:
            application/json:
              schema:
                type: object
                $ref : '#/components/schemas/signup-checkout-url' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /signup/email/:
    post:
      description: Send a verification link to the given email address. 
      requestBody:
        description: Email and client id 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/signup-mail' 
      responses:
        '202':
          description: Signup send email accepted. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /subscription/checkout-session/:
    post:
      description: Create a Stripe checkout session 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description:  Product and quantity 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/checkout-session' 
      responses:
        '201':
          description: Created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/checkout-session-url' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /subscription/portal-session/:
    post:
      description: Create a Stripe portal session 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description:  Redirection uri 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/portal-session' 
      responses:
        '201':
          description: Created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/portal-session-url' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /subscription/my-subscription/:
    get:
      description: Get the user current stripe subscription 
      security:
        - theye_oauth:
          - write 
      responses:
        '200':
          description: OK. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/subscription' 
        '401':
          description: Unauthorized. 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /subscription/plans/:
    get:
      description: Get stripe plans (product and prices) 
      responses:
        '200':
          description: OK. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/subscription-plans' 
  /synchronization-nonce/:
    post:
      description: Get server nonce for server-device time synchronization. 
      responses:
        '201':
          description: Created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/synchronization-nonce' 

  /synchronization-points/:
     post:
      description:  Create a server-device time synchronization point. 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16 
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Synchronization code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/synchronization-code' 
      responses:
        '201':
          description: Created 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/synchronization-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 