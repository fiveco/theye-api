openapi: '3.0.2'
info:
  title: THEye backend server API
  termsOfService: https://theye.ch/en/terms
  version: '0.49.0'
  description: |
   **Welcome in the THEye ecosystem backend server API documentation**

   This API description is divided in differents sections
   - General: For general puprose endpoints.
   - Gateway: For gateway specific endpoints.
   - Mobile: For mobile app specific endpoints.
   - Frontend: For web app specific endpoints.

   The Frontend section is the base for a custom web or software client application.
   You will find [here](/howto.html) more information how to use this API to build
   a custom user interface.
  contact: 
    name: FiveCo Innovative Engineering
    url: https://www.fiveco.ch
    email: info@fiveco.ch
  
servers:
  - url: https://backend.theye.ch/api/v0
    description: Production server
  - url: https://staging.backend.theye.ch/api/v0
    description: Staging test server

components:
  schemas:
    auth-guide:
      description: |  
        ## Authentication
        This API uses **oAuth** token authentication.
        TBD
    api-version:
      type: object
      properties:
        server_version:
          type: string
          format: semantic version number
          example: '1.2.3'
        api_version:
          type: string
          format: semantic version number
          example: '1.2.3'
        status:
          $ref: '#/components/schemas/status'
    signup:
      type: object
      properties:
        first_name:
          type: string
          example: Alice
        last_name:
          type: string
          example: Wonderland
        password:
          type: string
          example: SecretPa55word 
        company:
          type: string
          example: Inc. 
        signup_token:
          type: string
          format: string
          example: 'fkSF00jawdsf' 
        checkout:
          type: object
          $ref: '#/components/schemas/signup-checkout-session'
    signup-checkout-session:
      type: object
      properties:
        price_id:
          type: string
          example: price_fkdalj2o3ijsf
        quantity:
          type: number 
          example: 10 
        client_id:
          type: string 
          example: fdkslafjlak 
        redirect_uri_success:
          type: string
          example: http://localhost/checkout/success 
          description: It must be registered as non_sensitive_redirect_uris.
        redirect_uri_cancel:
          type: string
          example: http://localhost/checkout/cancel 
          description: It must be registered as non_sensitive_redirect_uri.
    signup-checkout-url:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        checkout_url:
          type: string
          example: https://example.com 
    signup-mail:
      type: object
      properties:
        email:
          format:  email
          example: alice.wonderland@mail.com
        client_id:
          type: string
          example: 'fkSF00jawdsf' 
        recaptcha_token:
          type: string
          example: 'feskaflelgj'    
    signup-email-validated:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        email:
          type: string
          format: email
        signup_token:
          type: string
          maxLength: 43
          minLength: 43
    status:
      type: object
      readOnly: true
      properties:
        code:
          type: string
          example: 400-000
        name:
          type: string
          format: string
          example: STATUS_NAME 
        description:
          type: string
          format: string
          example: Lorem ipsum. 
    status-response:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
    my-client-configuration:
      type: object
      properties:
        version:
          type: string 
          example: '1.2.3'
        configuration:
          type: object
          example: {'custom_property_1': '10', 'custom_property_2':'23'}
        status:
          $ref: '#/components/schemas/status'
    advertisement:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        advertisement: 
          type: object
          properties:
            AlertState:
              type: object
              properties:
                Hidden: 
                  type: boolean
                HumidityCurrent: 
                  type: boolean
                HumidityPast: 
                  type: boolean
                HumidityPastResettable: 
                  type: boolean
                Status: 
                  type: integer
                TemperatureCurrent: 
                  type: boolean
                TemperaturePast: 
                  type: boolean
                TemperaturePastResettable: 
                  type: boolean
            BatteryVoltage:
              type: number
            FirmwareVersion:
              type: string
              example: '1.2'
            LatestHumidity:
              type: number
            LatestTemperature:
              type: number
            Model:
              type: integer
            Type:
              type: integer
            Version:
              type: integer
            
    advertisement_list:
      type: array
      items: 
            $ref: '#/components/schemas/advertisement'
    authority-code:
      type: object
      properties:
        key_id:
          type: integer
          example: 314 
        code: 
          type: string 
          format: base16
          maxLength: 16 
          minLength: 16 
          example: 0123456789ABCDEF
    authority-token:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
          readOnly: true
        token: 
          type: string
          format: base16
          maxLength: 48 
          minLength: 48 
          example: 00112233445566778899AABBCCDDEEFF0123456789ABCDEF
          readOnly: true
        status:
          $ref: '#/components/schemas/status'
    batch-item:
      type: object
      properties:
        id:
          type: integer
          example: 314 
        name:
          type: string
          example: Foo 
        description:
          type: string
          example: Bar. 
        note:
          type: string
          example: Lorem ipsum. 
        manufaturer:
          type: string
          example: The Manufacturer 
        manufacture_date:
          type: string
          format: yyyy-mm-dd
          example: "2021-01-18"
        creation_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
        assemblers:
          type: array
          items: 
            type: integer
          example: [1,3]
        ofc_salt_id:
          type: integer
          example: 314 
        size:
          type: integer
          example: 1000 
        configuration:
          type: string
          format: json
          example: {"foo":"bar"}
        is_active:
          type: boolean
          example: true 
    batch:
      $ref: '#/components/schemas/batch-item'
      properties:
        status:
          $ref: '#/components/schemas/status'
        
    batches:
      type: object
      properties:
        batches:
          type: array
          items:
            $ref: '#/components/schemas/batch-item'
        status:
          $ref: '#/components/schemas/status'

    batch-configuration:
      type: object
      properties:
        id:
          type: integer
          example: 314 
        name:
          type: string
          example: Foo 
        ofc_salt_id:
          type: integer
          example: 314 
        configuration:
          type: string
          format: json
          example: "{'foo':'bar'}"
        size:
          type: integer
          example: 1000 
        recorded_devices:
          type: array
          items:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
          example: ["0123456789AB", "001122334455"]
        note:
          type: string
          example: some note
        manufacturer:
          type: string
          example: Eurocircuits
        manufacture_date:
          type: string
          format: date
          example: 2021-01-18
        status:
          $ref: '#/components/schemas/status'
    record:
      type: object
      properties:
        id:
          type: integer
          example: 314 
          readOnly: true
        creation_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        record:
          type: string
          format: json
          example: {"foo":"bar"}
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: "0123456789AB"
        batch_id:
          type: integer
          example: 314
        creator_email:
          type: string
          format: email
          example: alice.wonderland@mail.com
          readOnly: true
    records:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: '#/components/schemas/record'
        status:
          $ref: '#/components/schemas/status'
    contact:
      type: object
      properties:
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
        subject:
          type: string
          maxLength: 255 
          example: Quote request
        body:
          type: string
          maxLength: 5000
          example: Lorem ipsum. 
        first_name:
          type: string
          maxLength: 255 
          example: Alice
        last_name:
          type: string
          maxLength: 255 
          example: Wonderland
        company:
          type: string
          maxLength: 255 
          example: Foo Inc. 
        recaptcha_token: 
          type: string
          maxLength: 255
    checkout-session:
      type: object
      properties:
        price_id:
          type: string
          example: price_fkdalj2o3ijsf
        quantity:
          type: number 
          example: 10 
        redirect_uri_success:
          type: string
          example: http://localhost/checkout/success 
          description: It must be registered as non_sensitive_redirect_uri.
        redirect_uri_cancel:
          type: string
          example: http://localhost/checkout/cancel 
          description: It must be registered as non_sensitive_redirect_uri.
        
    checkout-session-url:
      type: object
      properties:
        checkout_url:
          type: string
          example: https://example.com 
        status:
          $ref: '#/components/schemas/status'
    check-synchronization:
      type: object
      properties:
        time_id:
          type: integer 
          example: 314 
    device_base:
      type: object
      properties:
        id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
          readOnly: true
        creation_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        modification_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        name:
          type: string
          example: Device A
        owner:
          type: integer 
          example: 1 
          readOnly: true
        type:
          type: integer
          example: 10
          readOnly: true
        model:
          type: integer
          example: 11
          readOnly: true
        hardware:
          type: string
          example: 2.3
          readOnly: true
        is_active:
          type: boolean
          example: true
          readOnly: true
        device_info:
          type: object
          readOnly: true
          properties:
            creation_date:
              type: string
              format: iso-8601
              example: 2021-01-18T16:32:10.000000Z
              readOnly: true
            api_version:
              type: string
              format: semantic version number
              example: '1.2.3'
            info:
              type: object
              readOnly: true
              properties:
                info_version:
                  type: integer
                  example: 0
                type:
                  type: integer
                  example: 10
                model:
                  type: integer
                  example: 11
                firmware:
                  type: string
                  example: 1.2
                hardware:
                  type: string
                  example: 2.3
                device_id:
                  type: string 
                  format: base16
                  maxLength: 12 
                  minLength: 12 
                  example: 0123456789AB 
                time_id:
                  type: integer
                  example: "123456"
                local_name:
                  type: string
                  maxLength: 16
                  example: Kitchen
                battery_voltage:
                  type: integer
                  description: Battery voltage in mV [V]
                  example: "3300"
                log_interval:
                  type: object
                  properties:
                    interval:
                      type: integer 
                      description: Interval time in [s]
                      example: 10
                    stop_recording:
                      type: boolean
                      example: false
                    stop_memory_full:
                      type: boolean
                      example: true
                limits:
                  type: object
                  properties:
                    thresholds:
                      type: object
                      properties:
                        lowest_temperature:
                          type: integer
                          description: Temperature in 0.01 [°C] 
                        highest_temperature:
                          type: integer
                          description: Temperature in 0.01 [°C]
                        lowest_humidity:
                          type: integer
                          description: Humidity in 0.01 [%]
                        highest_humidity:
                          type: integer
                          description: Humidity in 0.01 [%]
                    alerts:
                      type: object
                      properties:
                        current_temperature:
                          type: boolean
                        past_temperature:
                          type: boolean
                        past_temperature_resettable:
                          type: boolean
                        current_humidity:
                          type: boolean
                        past_humidity:
                          type: boolean
                        past_humidity_resettable:
                          type: boolean
                    config:
                      type: object
                      properties:
                        hidden:
                          type: boolean
                        tested:
                          type: boolean
        status:
          $ref: '#/components/schemas/status'
    gateway_device:
      allOf:
        - $ref: '#/components/schemas/device_base'
        - type: object
          properties:
            firmware_version:
              type: string
              description: "Firmware version of the device to modify (max 255.255.255)"
              example: "0.2.15"
            last_seen_date:
              type: string 
              format: iso-8601
              example: 2021-01-18T16:32:10.000000Z
    theye_device:
      allOf:
        - $ref: '#/components/schemas/device_base'
    device:
      oneOf:
        - $ref: '#/components/schemas/gateway_device'
        - $ref: '#/components/schemas/theye_device'
    devices:
      type: object
      properties:
        devices:
          type: array
          items:
            type: object
            properties:
              id:
                type: string 
                format: base16
                maxLength: 12 
                minLength: 12 
                example: 0123456789AB 
                readOnly: true
              name:
                type: string
                example: Device A
              owner:
                type: object
                properties:
                  id:
                    type: integer 
                    example: 1 
                    readOnly: true
                  first_name:
                    type: string
                    example: Alice
                  last_name:
                    type: string
                    example: Wonderland
              not_viewed_logs_count:
                description: number of logs from this device the requesting user hasn't seen since the last modification 
                type: integer
                example: 3
              type:
                type: integer
                example: 10
                readOnly: true
              model:
                type: integer
                example: 11
                readOnly: true
              hardware:
                type: string
                example: "2.3"
                readOnly: true
              battery_voltage:
                type: integer
                description: Battery voltage in mV [V]
                example: "3300"
              firmware:
                type: string
                example: "1.2"
              organization:
                type: object
                properties:
                  id:
                    type: integer
                    example: 11
                    readOnly: true
                  name:
                    type: string
                    example: Company X 
        status:  
          $ref: '#/components/schemas/status'
    device-public-info:
      type: object
      properties:
        is_free:
          type: boolean
          description: Is the device free (not owned by anybody)?
          example: true
        log:
          type: object
          properties:
            start_time_id:
              type: integer 
              description: Last log id present on the server.
              example: 3141592 
            head_page_time_id:
              type: integer 
              description: Last unsealed log page present on the server.
              example: 3200000
            head_pages_time_id:
              type: array
              description: |
                List of all unsealed pages present on the server.

                **Remark**: The mobile app will check all of this page on the device
                and retrieve the encrypted log from the oldest page still present on the device.
                The time id of this oldest page will be returned to limit this list with pages
                with a time id greater than this one in the next requests.
              items:
                type: integer
                example: 3200000
            need_synchronization:
              type: boolean
              description: Should a new synchronization point be created?
              example: true
        status:
          $ref: '#/components/schemas/status'
    devices-summary:
      type: object
      properties:
        total:
          type: integer
          example: 62
        total_owner:
          type: integer
          example: 12 
        total_organization:
          type: integer
          example: 40 
        total_free:
          type: integer
          example: 10 
        owners:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                example : 314 
              total :
                type: integer
                example : 12 
        organizations:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                example : 315 
              total :
                type: integer
                example : 40 
        status:
          $ref: '#/components/schemas/status'
    task-status: #not sure if I need to modify this
      type: object
      properties:
        nonce:
          type: string 
          format: base16
          maxLength: 24 
          minLength: 24 
          example: 00112233445566778899AABB
          readOnly: true
        expires:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        progress:
          type: number
          minimum: 0.0
          maximum: 1.0
        finished:
          type: boolean
          default: false
        error:
          type: boolean
          default: false
        message:
          type: string
          description: Error reason
          example: Lorem ipsum
        cancelled:
          type: boolean
          default: false
        cancellable:
          type: boolean
          default: false
        status:
          $ref: '#/components/schemas/status'
    devices-concatenation:
      type: object
      properties:
        devices:
          description: Filter by device-id array.
          type: array
          items:
            type: string
            format: "001122334455"
            example: [0123456789AB] 
        start_date:
          description: 
            Restrict data to values after the start_date (inclusive). 
            If no value is provided, the start_date of the log is used.
          type: integer 
          format: Time in POSIX 
          example: 12345678
        end_date:
          description: 
            Restrict data to values before the end_date (inclusive). 
            If no value is provided, the end_date of the log is used.
          type: integer 
          format: Time in POSIX 
          example: 12345699
        include:
          description: Data to add to file (array with temperature and/or humidity)
          type: array
          items:
            type: string
            enum:
              - temperature
              - humidity
          default: ['temperature','humidity']
        file_type:
          description: File type to retrieve
          type: string
          enum:
            - csv
          default: csv
        time_correction:
          description: 
            Choose the type of time correction wanted on log data points
            time axis. Must be based on start and end dates of log data.
          type: string
          example: none
          enum:
            - none
            - step
            - linear
          default: none
    device-file: #not sure if I modified it correctly
      type: object
      properties:
        file:
          type: object
          description: "File required"
        status:
          $ref: '#/components/schemas/status'
    device-log-certificate: 
      type: object
      properties:
        start_date:
          description: 
            Restrict data to values after the start_date (inclusive). 
            If no value is provided, the start_date of the first log is used.
          type: integer 
          format: Time in POSIX 
          example: 12345678
        end_date:
          description: 
            Restrict data to values before the end_date (inclusive). 
            If no value is provided, the end_date of the last log is used.
          type: integer 
          format: Time in POSIX 
          example: 12345699
        include:
          description: Data to add to file (array with temperature and/or humidity)
          type: array
          items:
            type: string
            enum:
              - temperature
              - humidity
          default: ['temperature','humidity']
        time_correction:
          description: 
            Choose the type of time correction wanted on log data points
            time axis. Must be based on start and end dates of log data.
          type: string
          example: none
          enum:
            - none
            - step
            - linear
          default: none
        quantity:
          description:
            Restrict point quantity on the graph to less than the quantity parameter. 
            If no value is provided, the max default value is used (3600).
          type: integer
          example: 3600
          default: 3600
        isRawData:
          description:
            Boolean to include or not the raw data table.
          type: boolean
          default: false
        isSigned:
          description:
            Boolean to sign or not the pdf.
          type: boolean
          default: false
    device-specification:
      type: object
      properties:
        name: 
          type: string
          example: 'TH-2'
          readOnly: true
        description:
          type: string
          example: 'Compact Bluetooth module for secure temperature and humidity recording.'
          readOnly: true
        type:
          type: integer 
          example: 52
          readOnly: true
        model: 
          type: integer
          example: 203
          readOnly: true
        hardware: 
          type: string 
          example: '3.1'
          readOnly: true
        is_active:
          type: boolean 
          example: true
          readOnly: true 
        voltage_low: 
          type: number
          example: 2600.0
          description: Lower voltage in [mV]
          readOnly: true
        voltage_high: 
          type: number
          example: 2900.0
          description: Higher voltage in [mV]
          readOnly: true
        percent_low: 
          type: number
          example: 20.0
          description: Lower value in [%]
          readOnly: true
        percent_high:
          type: number
          example: 80.0
          description: Higher value in [%]
          readOnly: true
        battery_capacity: 
          type: number
          example: 432.0
          description: Battery capacity in [mAh] 
          readOnly: true
        idle_current: 
          type: number
          example: 0.007 
          description: Idle current in [mA] 
          readOnly: true
        measurement_charge:
          type: number
          example: 0.01
          description: Electrical charge of one measurement in [mAs] 
          readOnly: true
        working_range:
          readOnly: true
          type: object
          properties:
            humidity:
              type: object
              properties:
                min:
                  type: number
                  example: 0 
                  description: Humidity min in [%RH] 
                max:
                  type: number
                  example: 100 
                  description: Humidity max in [%Rh] 
            temperature:
              type: object
              properties:
                min:
                  type: number
                  example: -40 
                  description: Temperature min in [°C] 
                max:
                  type: number
                  example: 100 
                  description: Temperature min in [°C] 
        sensor: 
          readOnly: true
          type: string
          example: SHT21
        sensor_parameters:
          readOnly: true
          type: object
          properties:
            humidity_accuracy:
              type: object
              properties:
                maximum:
                  type: object
                  properties:
                    humidity: 
                      type: array
                      example: [0, 10, 90, 100]
                      description: Abscissa (RH) in [%Rh] 
                    accuracy: 
                      type: array
                      example: [7.5, 4.5, 4.5, 7.5]
                      description: Ordinate (ΔRH) in [%Rh] 
                typical:
                  type: object
                  properties:
                    humidity: 
                      type: array
                      example: [0, 10,  90, 100] 
                      description: Abscissa (RH) in [%Rh] 
                    accuracy: 
                      type: array
                      example: [4, 2, 2, 4]
                      description: Ordinate (ΔRH) in [%Rh] 
            humidity_drift: 
              type: number
              example: 0.25
              description: Long term humidity drift in [%RH/year]
            temperature_accuracy:
              type: object
              properties:
                maximum:
                  type: object
                  properties:
                    temperature: 
                      type: array
                      example: [-40, 0, 65, 125]
                      description: Abscissa (T) in [°C] 
                    accuracy: 
                      type: array
                      example: [1, 0.4, 0.4, 1]
                      description: Ordinate (ΔT) in [°C] 
                typical:
                  type: object
                  properties:
                    temperature: 
                      type: array
                      example: [-40, 0, 65, 125]
                      description: Abscissa (T) in [%Rh] 
                    accuracy: 
                      type: array
                      example: [0.6, 0.2, 0.2, 0.6]
                      description: Ordinate (ΔT) in [%Rh] 
            tempertature_drift: 
              type: number
              example: 0.03
              description: Long term temperature drift in [°C/year]
            measure_conversion:
              type: object
              properties:
                temperature:
                  type: object
                  properties:
                    offset:
                      type: number
                      example: -45
                    factor_degree1: 
                      type: number
                      example: 0.08544921875
                    factor_degree2: 
                      type: number
                      example: 0
                humidity:
                  type: object
                  properties:
                    offset:
                      type: number
                      example: 0
                    factor_degree1: 
                      type: number
                      example: 0.048828125
                    factor_degree2: 
                      type: number
                      example: 0
    device-specifications:
      type: object
      properties:
        device_specifications: 
          type: array
          items:
            $ref: '#/components/schemas/device-specification'
        status:
          $ref: '#/components/schemas/status'
    elog:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        edata:
          type: string
          format: base64url 
          example: d3As065hUfzeLue21P69HxIix373+FLWtoMDru6PFdy9ZYLlD6yRuwEJCYAjhATu6LiJp340n7Imhhmmp5Xbm9ws7tKbGyGkxgG7GeJ8fak=
        hash:
          type: string 
          format: base16
          maxLength: 64 
          minLength: 64 
          example: 00112233445566778899AABBCCDDEEFF00112233445566778899AABBCCDDEEFF 
        initialization_vector:
          type: string 
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF 
        used_head_time_id:
            type: integer 
            example: 3200000
        key_id:
          type: integer 
          example: 314 
      required:
        - "device_id"
        - "edata"
        - "hash"
        - "initialization_vector"
        - "key_id"
    email-change:
      type: object
      properties:
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
        new_email:
          type: string
          format:  email
          example: bob.sponge@mail.com
    email-validation:
      type: object
      properties: 
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
        token:
          type: string
          pattern: '^[a-zA-Z0-9]{8}$'
    email-change-validated:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/status'
        email:
          type: string
          format: email
    encrypted_data:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        encrypted_data:
          type: string
          format: base64url 
          example: d3As065hUfzeLue21P69HxIix373+FLWtoMDru6PFdy9ZYLlD6yRuwEJCYAjhATu6LiJp340n7Imhhmmp5Xbm9ws7tKbGyGkxgG7GeJ8fak=
        hash:
          type: string 
          format: base16
          maxLength: 64 
          minLength: 64 
          example: 00112233445566778899AABBCCDDEEFF00112233445566778899AABBCCDDEEFF 
        initialization_vector:
          type: string 
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF 
        key_id:
          type: integer 
          example: 314 
    feature:
      type: object
      properties:
        max_devices:
          type: integer 
        max_organizations:
          type: integer 
        max_members:
          type: integer 
        data_history_seconds:
          type: integer 
        chart_superposition:
          type: boolean 
        email_new_data:
          type: boolean 
        alarm_system:
          type: boolean 
        data_export:
          type: boolean 
        signed_certificate:
          type: boolean 
        locking: 
          type: boolean 
    16bytes_code:
      type: string
      format: base16
      maxLength: 32 
      minLength: 32 
      example: 00112233445566778899AABBCCDDEEFF
    identification_token:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/16bytes_code'
        expires:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        status:
          $ref: '#/components/schemas/status'
    invalid_advertisement:
      type: object
      properties:
        index:
          type: integer
        data:
          $ref: '#/components/schemas/advertisement'
        errors:
          type: object
          properties:
            device_id:
              type: array
              items: 
                type: string 
                example: Some Device Id Error
            advertisement:
              type: array
              items: 
                type: string 
                example: Some Advertisement Error
    invalid_advertisements:
      type: object
      properties:
        invalid_advertisements:
          type: array
          items: 
            $ref: '#/components/schemas/invalid_advertisement'
        status:
          $ref: '#/components/schemas/status'
    logs:
      type: object
      properties:
        logs:
          type: array
          items: 
            $ref: '#/components/schemas/log'
        status:
          $ref: '#/components/schemas/status'
    log:
      type: object
      properties:
        device_id:
          type: string
          format: hex48 
          example: 0123456789AB 
          readOnly: true
        time_interval:
          type: integer
          description: Interval between successive points in seconds.
          readOnly: true
        start_time_id:
          type: integer 
          example: 314 
          readOnly: true
        name:
          type: string
          example: 'Packet A delivery.' 
          readOnly: false
        start_date:
          type: integer
          format: Time in POSIX 
          deprecated: true
          readOnly: true
        end_date:
          type: integer
          format: Time in POSIX 
          deprecated: true
          readOnly: true
        time_corrections:
          type: array
          items: 
            $ref: '#/components/schemas/log_time_correction'
        is_active:
          type: boolean
          example: true 
          readOnly: false
    log_time_correction:
      type: object
      properties:
        type:
          type: string
          example: "none"
          enum:
            - none
            - step
            - linear
        start_date:
          type: integer
          format: Time in POSIX 
        end_date:
          type: integer
          format: Time in POSIX 
    log_data:
      type: object
      properties:
        device_id:
          type: string
          format: hex48 
          example: 0123456789AB 
        start_time_id:
          type: integer
          example: 314 
        period:
          type: string
          example: minute 
        time_correction:
          type: string
          description: The time correction type used on the transmitted data.
          enum:
            - none
            - step
            - linear
          example: none
        temperature_mean:
          type: number 
          description: "The window (start_date, end_date) mean temperature."
          example: 25
        temperature_mkt:
          type: number 
          description: "The window (start_date, end_date) mean kinetic temperature."
          example: 25
        temperature_max:
          type: number 
          description: "The window (start_date, end_date) max temperature."
          example: 25.1 
        temperature_min:
          type: number 
          description: "The window (start_date, end_date) min temperature."
          example: 24.9 
        humidity_mean:
          type: number 
          description: "The window (start_date, end_date) mean humidity."
          example: 50 
        humidity_max:
          type: number 
          description: "The window (start_date, end_date) max humidity."
          example: 50.1 
        humidity_min:
          type: number 
          description: "The window (start_date, end_date) min humidity."
          example: 49.9 
        times:
          type: array
          items: 
            type: integer
            description: Time in POSIX 
          example:
            - 10
            - 70 
            - 130 
        temperatures:
          type: array
          items: 
            type: number 
            description: Temperature of the point (in [°C]) 
          example:
            - 25.00 
            - 25.10 
            - 24.90 
        temperatures_max:
          type: array
          items: 
            type: number 
            description: Temperature of the point (in [°C]) 
          example:
            - 25.00 
            - 25.10 
            - 24.90 
        temperatures_min:
          type: array
          items: 
            type: number 
            description: Temperature of the point (in [°C]) 
          example:
            - 25.00 
            - 25.10 
            - 24.90 
        humidities:
          type: array
          items: 
            type: number 
            description: Humidity of the point (in [%]) 
          example:
            - 50.00 
            - 50.10 
            - 49.90 
        humidities_max:
          type: array
          items: 
            type: number 
            description: Humidity of the point (in [%]) 
          example:
            - 50.00 
            - 50.10 
            - 49.90 
        humidities_min:
          type: array
          items: 
            type: number 
            description: Humidity of the point (in [%]) 
          example:
            - 50.00 
            - 50.10 
            - 49.90 
        missing_data_intervals:
          type: array
          description: List of times pair within no data is present
          items:
            type: array
            description: time pairs
            example: 
              - 1649721600
              - 1651190400
        new_pb_causes:
          type: object
          properties:
            start_new_log:
              type: array
              items:
                type: integer
                description: Timestamps at wich a PageBlock was started because of the beginning of a new log
                example: 
                  - 1708532141
                  - 1708574369
            last_page_full:
              type: array
              items:
                type: integer
                description: Timestamps at wich a PageBlock was started because the last PageBlock was full
                example: 
                  - 1708532141
                  - 1708574369
            proc_reset:
              type: array
              items:
                type: integer
                description: Timestamps at wich a PageBlock was started because of a processor reset
                example: 
                  - 1708532141
                  - 1708574369
            sensor_reset:
              type: array
              items:
                type: integer
                description: Timestamps at wich a PageBlock was started because of a sensor reset
                example: 
                  - 1708532141
                  - 1708574369
            bytes_corrupt:
              type: array
              items:
                type: integer
                description: Timestamps at wich a PageBlock was started because of some corrupted bytes
                example: 
                  - 1708532141
                  - 1708574369
            other_causes:
              type: array
              items:
                type: object
                properties:
                  HC:
                    type: number
                    description: Header code, causes of the new page block
                    example: 0xC0
                  time:
                    type: integer
                    description: Timestamps at wich a PageBlock was started because of this specific cause
                    example: 1708574369
        viewed:
          type: boolean
          example: true 
        device_infos:
          type: array
          items:
            type: object
            properties:
              time:
                type: integer
                description: Timestamps at which this device info should be considered
                example: 1708532141
              info:
                type: object
                readOnly: true
                properties:
                  info_version:
                    type: integer
                    example: 0
                  type:
                    type: integer
                    example: 10
                  model:
                    type: integer
                    example: 11
                  firmware:
                    type: string
                    example: 1.2
                  hardware:
                    type: string
                    example: 2.3
                  device_id:
                    type: string 
                    format: base16
                    maxLength: 12 
                    minLength: 12 
                    example: 0123456789AB 
                  time_id:
                    type: integer
                    example: "123456"
                  local_name:
                    type: string
                    maxLength: 16
                    example: Kitchen
                  battery_voltage:
                    type: integer
                    description: Battery voltage in mV [V]
                    example: "3300"
                  log_interval:
                    type: object
                    properties:
                      interval:
                        type: integer 
                        description: Interval time in [s]
                        example: 10
                      stop_recording:
                        type: boolean
                        example: false
                      stop_memory_full:
                        type: boolean
                        example: true
                  limits:
                    type: object
                    properties:
                      thresholds:
                        type: object
                        properties:
                          lowest_temperature:
                            type: integer
                            description: Temperature in 0.01 [°C] 
                          highest_temperature:
                            type: integer
                            description: Temperature in 0.01 [°C]
                          lowest_humidity:
                            type: integer
                            description: Humidity in 0.01 [%]
                          highest_humidity:
                            type: integer
                            description: Humidity in 0.01 [%]
                      alerts:
                        type: object
                        properties:
                          current_temperature:
                            type: boolean
                          past_temperature:
                            type: boolean
                          past_temperature_resettable:
                            type: boolean
                          current_humidity:
                            type: boolean
                          past_humidity:
                            type: boolean
                          past_humidity_resettable:
                            type: boolean
                      config:
                        type: object
                        properties:
                          hidden:
                            type: boolean
                          tested:
                            type: boolean
        is_active:
          type: boolean
          example: true 
        status:
          $ref: '#/components/schemas/status'
    server-code:
      type: object
      properties:
        code: 
          type: string 
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF 
          readOnly: true
        expires:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
        status:
          $ref: '#/components/schemas/status'
          readOnly: true
    ownership-factory-code:
      type: object
      properties:
        device_id: 
          type: string 
          format: base16
          example: 0123456789AB
          readOnly: true
        code: 
          type: string 
          format: base16
          example: CDEF1011 
          readOnly: true
        salt_id:
          type: integer 
          example: 0
          readOnly: true
        status:
          $ref: '#/components/schemas/status'
      description: 
        'Data are encoded in big endian in QRCode.
        Example: device_code=0123456789AB and code=CDEF1011 become 
        AB89674523011110EFCD (AB:89:67:45:23:01 11:10:EF:CD) in QRCode.'

    encrypted_code:
      type: object
      properties:
        key_id: 
          type: integer
          example: 314 
        encrypted_code:
          $ref: '#/components/schemas/16bytes_code'
    ownership-token:
      type: object
      properties:
        key_id: 
          type: integer
          example: 314 
        encrypted_code:
          $ref: '#/components/schemas/16bytes_code'
        ownership_factory_code:
          type: string
          format: base16
          maxLength: 8 
          minLength: 8 
          example: ABCDEF01
    ownership-token-old:
      type: object
      properties:
        key_id: 
          type: integer
          example: 314 
        ownership_token:
          type: string
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF
        ownership_factory_code:
          type: string
          format: base16
          maxLength: 8 
          minLength: 8 
          example: ABCDEF01
    download-file:
      type: object
      properties:
        download_url:
          type: string
          example: https://some/url/
        file_name:
          type: string
          example: file_name.csv
        status:
          $ref: '#/components/schemas/status'
    password:
      type: object
      properties:
        password:
          type: string
          example: SecretPa55word 
        new_password:
          type: string
          example: NewSecretPa55word 
    password-reset:
      type: object
      properties:
        new_password:
          type: string
          example: NewSecretPa55word 
        password_token:
          type: string
          format: string
          example: 'fkSF00jawdsf' 
    password-reset-mail:
      type: object
      properties:
        email:
          format:  email
          example: alice.wonderland@mail.com
        client_id:
          type: string
          example: 'fkSF00jawdsf' 
        recaptcha_token:
          type: string
          example: 'feskaflelgj' 
        redirect_uri:
          type: string
          example: http://localhost/signup/mail-verified 
          description: It must be registered as sensitive_redirect_uri.
    plan:
      type: object
      properties:
        stripe_id:
          type: string 
          example: prod_loremipsum 
          readOnly: true
        name:
          type: string
          example: Pro 
        description:
          type: string
          example: Pro plan 
        display_order:
          type: integer 
          example: 10 
        features:
          type: object 
          $ref : '#/components/schemas/feature'
        prices:
          type: array
          items:
            type: object 
            $ref : '#/components/schemas/price'
    subscription-plans:
      type: object
      properties:
        subscription_plans:
          type: array
          items: 
            $ref : '#/components/schemas/plan' 
        status:
          $ref: '#/components/schemas/status'
    portal-session:
      type: object
      properties:
        redirect_uri:
          type: string
          example: https://example.com 
          description: It must be registered as non_sensitive_redirect_uris
    portal-session-url:
      type: object
      properties:
        portal_url:
          type: string
          example: https://example.com 
        status:
          $ref: '#/components/schemas/status'
    price:
      type: object
      properties:
        stripe_id:
          type: string 
          example: price_loremipsum 
          readOnly: true
        currency:
          type: string
          example: chf 
        interval:
          type: string
          example: month 
        interval_count:
          type: integer 
          example: 1 
        unit_amount:
          type: integer 
          example: 1 
    product:
      type: object
      properties:
        stripe_id:
          type: string 
          example: prod_loremipsum 
          readOnly: true
        name:
          type: string
          example: Pro 
        description:
          type: string
          example: Pro plan 
        display_order:
          type: integer 
          example: 10 
        features:
          type: object 
          $ref : '#/components/schemas/feature'
    subscription:
      type: object
      properties:
        stripe_id:
          type: string 
          example: prod_loremipsum 
          readOnly: true
        quantity:
          type: string 
          example: prod_loremipsum 
          readOnly: true
        cancel_at_period_end:
          type: boolean 
          example: false 
          readOnly: true
        current_period_start:
            type: integer
            description: Time in POSIX 
            example: 0 
            readOnly: true
        current_period_end:
            type: integer
            description: Time in POSIX 
            example: 0 
            readOnly: true
        price:
          type: object 
          $ref : '#/components/schemas/price'
        product:
          type: object 
          $ref : '#/components/schemas/product'
        status:
          $ref: '#/components/schemas/status'
    profile:
      type: object
      properties:
        id:
          type: integer
          example: 314
          readOnly: true
        company:
          type: string
          example: Inc. 
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
          readOnly: true
        first_name:
          type: string
          example: Alice
        last_name:
          type: string
          example: Wonderland
        unicode_locale_id:
          type: string
          format: unicode locale identifier
          description: https://unicode.org/reports/tr35/
          example: 'en-US'
        unit_system:
          type: string
          description: 
            "Can be either SI, IMPERIAL or USCS (International system of units,
            Imperial system of units or US Customary measurement system)."
          example: 'SI'
        currency:
          type: string
          example: chf 
          readOnly: true
        enable_elog_report:
          type: boolean
          description: "Set if an email is sent to user when new log data have been pushed to server."
        status:
          $ref: '#/components/schemas/status'
        enable_alarms_report:
          type: boolean
          description: Set if an email is sent to user when an new alarm is detected.
    profile-delete:
      type: object
      properties:
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
        password:
          type: string
          example: SecretPa55word 
    synchronization-nonce:
      type: object
      properties:
        nonce:
          type: string 
          format: base16
          maxLength: 24 
          minLength: 24 
          example: 00112233445566778899AABB
          readOnly: true
        expires:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        status:
          $ref: '#/components/schemas/status'
    synchronization-code:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        key_id:
          type: integer
          example: 314 
        synchronization_code: 
          type: string 
          format: base16 
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF
        status:
          $ref: '#/components/schemas/status'
    synchronization-token:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
          readOnly: true
        synchronization_token: 
          type: string
          format: base16 
          maxLength: 48 
          minLength: 48 
          example: 00112233445566778899AABBCCDDEEFF0123456789ABCDEF
          readOnly: true
        status:
          $ref: '#/components/schemas/status'
    synchronization-status:
      type: object
      properties:
        synchronized:
          type: boolean
          example: true 
          readOnly: true
        delta:
          type: integer
          example: 314
        status:
          $ref: '#/components/schemas/status'

  securitySchemes:
    theye_oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://backend.theye.ch/o/authorize'
          tokenUrl: 'https://backend.theye.ch/o/token'
          scopes:
            'openid': OpenId Connect scope
            'read': Can read 
            'write': Can write 
    theye_oidc:
      type: openIdConnect
      openIdConnectUrl: 'https://backend.theye.ch/o/.well-known/openid-configuration'

tags:
  - name: General
    description: Endpoints for general use
  - name: Gateway
    description: Endpoints reserved for Gateway operations
  - name: Mobile
    description: Endpoints reserved for Mobile App operations
  - name: Frontend
    description: Endpoints for frontend display (Web App) or clients custom access
  - name: Production
    description: Endpoints reserved for the production process.

paths:
  /:
    get:
      summary: API version
      tags:
        - General
      description: Get THEye Server and API versions. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/api-version'
  /contact/:
    post:
      summary: Post a contact formular
      tags:
        - Frontend
      description: Post a contact formular. 
      requestBody:
        description: Contact 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/contact' 
      responses:
        '202':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response'
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/:
    get:
      summary: Get user devices
      tags:
        - Frontend
      description: Get all devices of the user.
      parameters:
        - name: owner #TODO should we really put this here ? As we have the security scheme
          in : query
          description: Filter by device owner.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: organization #TODO should we really put this here ? As we have the security scheme
          in : query
          description: Filter by organization.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: free # TODO is this necessary ?? it's not in query ?
          in : query
          description: Filter by free device.
          schema:
            type: string 
            example: true 
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/devices' 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/set-all-logs-viewed/:
    put:
      summary: Set all logs as viewed.
      tags:
        - Frontend
      description: Set all logs of a device as viewed by a user.
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, device updated 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/devices'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/summary/:
    get:
      summary: Get devices summary
      tags:
        - Frontend
      description: Get devices summary. TBD
      parameters:
        - name: owner 
          in : query
          description: Filter by device owner.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: organization 
          in : query
          description: Filter by organization.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: free 
          in : query
          description: Filter by free device.
          schema:
            type: string 
            example: true 
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/devices-summary'
                  
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/concatenation/:
    post:
      summary: Request multiple device concatenation file
      tags:
        - Frontend
      description: Post concatenation file request to retrieve a new file containing multiple 
        devices logs in a table format.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/devices-concatenation' 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/task-status'                   
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/files/{nonce-id}/status/:
    get:
      summary: Get file generation status
      tags:
        - Frontend
      description: |
       Retrieve server file generation task state. When finished, the file will
       be available in [retrieve file](#path-/devices/files/{nonce-id}/file/)
      parameters:
        - name: nonce-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 24 
            minLength: 24 
            example: 00112233445566778899AABB
            readOnly: true
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/task-status'                   
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found (may be a bad nonce id)
    put:
      summary: Cancel file generation
      tags:
        - Frontend
      description: Cancel celery task
      parameters:
        - name: nonce-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 24 
            minLength: 24 
            example: 00112233445566778899AABB
            readOnly: true
      requestBody:
        description: Used to cancel a celery task using its nonce id and a boolean isCancelled.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isCancelled:
                  type: boolean
                  description: Indicates if the task is cancelled.
                  example: true
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/task-status'   
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response'                 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found (may be a bad nonce id)
  /devices/files/{nonce-id}/file/:
    get:
      summary: Retrieve a server generated file
      tags:
        - Frontend
      description: Retrieve a file generated by the server 
       ([status](#path-/devices/files/{nonce-id}/status/) must be finished=true)
       by example by [concatenation](#path-/devices/concatenation/) or 
       [certified document](#path-/devices/{device-id}/logs/{start-time-id}/certificate/).
      parameters:
        - name: nonce-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 24 
            minLength: 24 
            example: 00112233445566778899AABB
            readOnly: true
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content: 
            text/csv:
              schema:
                format: file
            application/pdf:
              schema:
                format: file            
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
        '404':
          description: Not found (may be a bad nonce id)
  /devices/{device-id}/:
    get:
      summary: Get device data
      tags:
        - Frontend
        - Mobile
      description: Get data for a specific device ID.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
        - name: id_token
          in: query
          description: "Identification Token used by autonomous device to make specific requests without being authentificated."
          required: false
          schema:
            $ref: '#/components/schemas/16bytes_code'
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    put:
      summary: Put device data
      tags:
        - Frontend
      description: Put device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Data of the device to update
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref : '#/components/schemas/device' 
              - type: object
                properties:
                  id_token:
                    description: "Identification Token used by autonomous device to make specific requests without being authentificated (optionnal)."
                    type: string
                    format: base16
                    maxLength: 32 
                    minLength: 32 
                  
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, device updated 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/logs/{start-time-id}/certificate/:
    post:
      summary: Ask a certified document for a log
      tags:
        - Frontend
      description: Post certified document generation request for a specific log. 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB
        - name: start-time-id 
          in: path
          required: true
          schema:
            type: integer 
            example: 314
      requestBody:
        description: Encrypted device info 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/device-log-certificate'
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/task-status'                   
        '401':
          description: Unauthorized.
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response'
  /devices/{device-id}/check-synchronization:
    put:
      summary: Check device time synchronization
      tags:
        - Gateway
        - Mobile
      description: Check whether the device time is synchronized with the server or not.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Current time id 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/check-synchronization' 
      responses:
        '200': 
          description: Ok, access-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/synchronization-status' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/compute-access-token:
    put:
      summary: Compute access (permission) token
      tags:
        - Mobile
      description: Compute and get the access token based on key ID and lock code.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      responses:
        '200': 
          description: Ok, access-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized. 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/compute-configuration-token:
    put:
      summary: Get the configuration token
      tags:
        - Mobile
      description: Compute and get the configuration token.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      responses:
        '200': 
          description: Ok, configuration-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized. 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 

  /devices/{device-id}/compute-factory-access-token:
    put:
      summary: Get the factory access token
      tags:
        - Mobile
      description: Compute and get the factory access token.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      responses:
        '200': 
          description: Ok, factory-access-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/compute-factory-configuration-token:
    put:
      summary: Get the factory access token
      tags:
        - Mobile
      description: Compute and get the factory access token.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      responses:
        '200': 
          description: Ok, factory-configuration-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 

  /devices/{device-id}/compute-lock-token:
    put:
      summary: Compute lock tocken
      tags:
        - Mobile
      description: Compute and get the device lock token to be able to unlock the device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Lock Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/authority-code' 
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: Ok, lock-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/authority-token' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/devices-data/:
    put:
      summary: Put data of another device
      tags:
        - Gateway
      description: Allows a device (ex:Gateway) to put data of another device 
        (THEye) on the server
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Data of the device to update
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id_token
              properties:
                id_token:
                  description: "Identification Token used by autonomous device to make specific requests without being authentificated (optionnal)."
                  type: string
                  format: base16
                  maxLength: 32 
                  minLength: 32
                advertisement_list:
                  $ref : '#/components/schemas/advertisement_list' 
          
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/invalid_advertisements'
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response'
  /devices/{device-id}/set-all-logs-viewed/:
    put:
      summary: Set all logs of a device as viewed
      tags:
        - Frontend
      description: Set all logs of a single device as viewed by a user.
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, logs updated 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/logs'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/logs/:
    get:
      summary: Retrieve logs of a device
      tags:
        - Frontend
      description: Get the list of logs of the device
      security:
        - theye_oauth:
          - read 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/logs'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/logs/{start-time-id}/:
    get:
      summary: Get a specific log
      tags:
        - Frontend
      description: 
        Get the log data. If needed, the server will automtically adjust the 
        aggregation period to build a response containing less than the server
        max point setting. (1000 points)
      security:
        - theye_oauth:
          - read 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
        - name: start-time-id 
          in: path
          required: true
          schema:
            type: integer 
            example: 314
        - name: period
          in: query 
          description: 
            Set the aggregation period [second, minute, hour, day, month, year]
          schema:
            type: string 
            example: second 
            default: second 
        - name: start_date
          in: query 
          description: 
            Restrict data to values after the start_date (inclusive). 
            If no value is provided, the start_date of the log is used.
          schema:
            type: integer 
            format: Time in POSIX 
        - name: end_date
          in: query 
          description: 
            Restrict data to values before the end_date (inclusive). 
            If no value is provided, the end_date of the log is used.
          schema:
            type: integer 
            format: Time in POSIX 
        - name: quantity 
          in: query 
          description: 
            Restrict point quantity to less than the quantity parameter. 
            If no value is provided, the max default value is used (3600).
          schema:
            type: integer 
            format: Time in POSIX 
        - name: time_correction
          in: query
          description: 
            Choose the type of time correction wanted on log data points
            time axis. Must be based on start and end dates of log data.
          schema:
            type: string
            example: none
            enum:
              - none
              - step
              - linear
            default: none
        - name: interval_inf
          in: query 
          description: 
            Used to determine the start_date with which compute the stats.
            start_date (query) + interval_inf (query) = start_date of web graph.
            By default, equal interval_sup (if existing) or 0.
          schema:
            type: integer 
            format: Time in POSIX 
        - name: interval_sup
          in: query 
          description: 
            Used to determine the end_date with which compute the stats.
            end_date (query) - interval_sup (query) = end_date of web graph.
            By default, equal interval_inf (if existing) or 0.
          schema:
            type: integer 
            format: Time in POSIX 
        - name: stat_only
          in: query 
          description: 
            If true, only the stats are returned (min, max, mean, mkt).
          schema:
            type: boolean 
            default: false
        - name: activation_energy
          in: query 
          description: 
            Used to compute MKT. 'Activation energy H is the minimum amount of 
            energy that must be available to reactants for a chemical reaction 
            to occur'. Must be a positive value in J/mol. By default, use a 
            commonly used value in pharma.
          schema:
            type: number 
            default: 83144.72

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/log_data'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    put:
      summary: Put updated log data
      tags:
        - Frontend
      description: Put updated log data. Allow to change the log name, the time correction and 
        the active state.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
        - name: start-time-id 
          in: path
          required: true
          schema:
            type: integer 
            example: 314
      requestBody:
        description: Data of the log to update
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/log' 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, log updated 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/log' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response'
  /devices/{device-id}/own:
     put:
      summary: Ask ownership on a device.
      tags:
        - Mobile
      description: |
        Ask ownership of a device. If the device is not owned by anybody,
        and the ownsership token is valid, the user will be granted the ownership of the
        device. 

        **Remark**: If the device was never owned before, the ownership factory code is mandatory.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Owneship token 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/ownership-token-old' 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, ownership granted. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '201': 
          description: Ok, ownership granted and device created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/ownership-factory-code/:
    get:
      summary: Get the ownership factory code
      tags:
        - Production
      description: Get the ownership factory code of the device
      security:
        - theye_oauth:
          - read 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
          
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/ownership-factory-code'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/release:
     put:
      summary: Ask to release a device ownership.
      tags:
        - Frontend
        - Mobile
      description: Release ownership of the device. The device will be fried and any other user 
        will be allowed to ask ownership on it.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, ownership released. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/public-info/:
     get:
      summary: Get device public info
      tags:
        - Mobile
        - Gateway
      description: Get public info about the theye-device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      responses:
        '200': 
          description: Ok. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device-public-info' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /devices/{device-id}/token/:
    post:
      summary: Create an Identification Token
      tags:
        - Gateway
      description: Create an Identification Token linked to a device if the server 
        code in the request is valid. 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Encrypted Server Code and the key_id used to encrypt it. 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/encrypted_code' 
      responses:
        '201': 
          description: Ok, Identification Token created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/identification_token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response'
  /devices/{device-id}/update-fw-version/:
    get:
      summary: Get new firmware url
      tags:
        - Gateway
      description: Get the download url of the target firmware version.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
        - name: id_token
          in: query 
          description: 
            Identification Token
          schema:
            type: string 
            format: base16
            maxLength: 32 
            minLength: 32 
            example: 00112233445566778899AABBCCDDEEFF 
          
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/download-file'
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /device-info/:
    post:
      summary: Post encrypted device info
      tags:
        - Mobile
        - Gateway
      description: Post encrypted device info retrieved from the device. 
      requestBody:
        description: Encrypted device info 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/encrypted_data' 
      responses:
        '201':
          description: Created 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /discovery/device-specifications/:
    get:
      summary: Get all devices specifications
      tags:
        - Mobile
        - Frontend
        - Gateway
      description: Get device specification list. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device-specifications'
  /discovery/status/:
    get:
      summary: Get status list
      tags:
        - General
      description: Not yet implemented. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : '#/components/schemas/status'
  /my-client-configuration/:
    get:
      summary: Get client configuration 
      tags:
        - Frontend
      description: |
        Get the client configuration of the current user and the current application. 

        **Remark**: This endpoint return a json with unstructured contents. It should not be used 
        by a custom frontend.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/my-client-configuration' 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    put: 
      summary: Put client configuration 
      tags:
        - Frontend
      description: Create or update the client configuration of the current user and the current application. 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Configuration data 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/my-client-configuration' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/my-client-configuration' 
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/my-client-configuration' 
        '401':
          description: Unauthorized.
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 

  /elog/:
    put:
      summary: Post new encrypted log data
      tags:
        - Gateway
        - Mobile
      description: Put encrypted log
      requestBody:
        description: Encrypted data 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/elog' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /ownership-code/: 
    post:
      summary: Create an ownership code
      tags:
        - Mobile
      description: Create and get an ownership code. 
      security:
        - theye_oauth:
          - write 
      responses:
        '201': 
          description: Ok, ownership code created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/server-code' 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /password-reset:
    put:
      summary: Ask to reset the user password
      tags:
        - Frontend
      description: Password reset.  
      requestBody:
        description: Password reset parameters. 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/password-reset' 
      responses:
        '200':
          description: Password updated. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /password-reset/email/:
    post:
      summary: TBD
      tags:
        - Frontend
      description: Create a password reset action and send a password reset link to 
        the given email address. 
      requestBody:
        description: Password reset parameters 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/password-reset-mail' 
      responses:
        '202':
          description: Password reset send email accepted. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /production/batches/:
    get:
      summary: Get production batches
      tags:
        - Production
      description: Get production batches.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/batches' 
        '401':
          description: Unauthorized 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /production/batches/{batch_id}/:
    get:
      summary: Get a production batch
      tags:
        - Production
      description: Get production batch by its ID.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/batch' 
        '401':
          description: Unauthorized 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not Found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /production/batches/{batch_id}/configuration/:
    get:
      summary: Get production batch configuration
      tags:
        - Production
      description: Get a production batch configuration by batch id.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/batch-configuration' 
        '401':
          description: Unauthorized 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not Found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /production/records/:
    get:
      summary: Get production records
      tags:
        - Production
      description: Get production records.
      security:
        - theye_oauth:
          - read 
      parameters:
        - name: batch 
          in : query
          description: Filter by batch id.
          schema:
            type: array
            items:
              type: integer
              example: 314
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/records' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    post:
      summary: Post production records
      tags:
        - Production
      description: Create a production record. 
      security:
        - theye_oauth:
          - write
      requestBody:
        description: Record 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/record' 
      responses:
        '201':
          description: Created 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /profile/:
    get:
      summary: Get user profile
      tags:
        - Frontend
        - Mobile
      description: Get logged in user profile.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/profile' 
        '401':
          description: Unauthorized 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
    put:
      summary: Put user profile
      tags:
        - Frontend
      description: Update the user profile.
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Data of the profile to update
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/profile' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/profile' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /profile/delete:
    put:
      summary: Ask to delete a user.
      tags:
        - Frontend
      description: Delete the user. All user data will be delete and owned devices will be fried.
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: User credentials.
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/profile-delete' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /profile/email/:
    post:
      summary: Create an e-mail change action
      tags:
        - Frontend
      description: Create a email change action. TBD
      security:
        - theye_oauth:
          - write
      requestBody:
        description: Email change request 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/email-change' 
      responses:
        '202':
          description: Email change send email accepted. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /profile/email/validate/:
    post:
      summary: Verify and edit a user's new email
      tags:
        - Frontend
      description: Receives a code send my email after a email changing request in /profile/email/. 
        Check if it's corresponds to a non expired email changing process. 
        If applicable, update usr's email and delete email changing process. 
        Returns the user's new email.
      security:
        - theye_oauth:
          - write
      requestBody:
        description: Email change validation 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/email-validation' 
      responses:
        '202':
          description: Email validated and user's email updated. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/email-change-validated' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not Found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /profile/password/:
    put:
      summary: Ask to update the user password
      tags:
        - Frontend
      description: Update the user password. 
      security:
        - theye_oauth:
          - write
      requestBody:
        description: Passwords 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/password' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /signup/:
    post:
      summary: Post a new user data
      tags:
        - Frontend
      description: Signup  TBD 2nd phase
      requestBody:
        description: User informations 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/signup' 
      responses:
        '201':
          description: Created. 
          content:
            application/json:
              schema:
                type: object
                $ref : '#/components/schemas/signup-checkout-url' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /signup/email/:
    post:
      summary: Ask to create a new user
      tags:
        - Frontend
      description: Ask to create a new user and send a verification code to 
        the given email address. Signup 1st phase TBD
      requestBody:
        description: Email and client id 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/signup-mail' 
      responses:
        '202':
          description: Signup send email accepted. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /signup/email/validate/:
    post:
      summary: Verify a new user's email
      tags:
        - Frontend
      description: Receives a code send my email after a sign up request in /signup/email/. 
        Check if it's corresponds to a non expired sign up process. 
        If applicable, returns a SignUp token required to finalize s SignUp process in /signup/.
      requestBody:
        description: New user's email validation 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/email-validation' 
      responses:
        '202':
          description: New user's email validated. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/signup-email-validated' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not Found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /subscription/checkout-session/:
    post:
      summary: TBD
      tags:
        - Frontend
      description: Create a Stripe checkout session 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description:  Product and quantity 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/checkout-session' 
      responses:
        '201':
          description: Created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/checkout-session-url' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /subscription/portal-session/:
    post:
      summary: TBD
      tags:
        - Frontend
      description: Create a Stripe portal session 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description:  Redirection uri 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/portal-session' 
      responses:
        '201':
          description: Created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/portal-session-url' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /subscription/my-subscription/:
    get:
      summary: TBD
      tags:
        - Frontend
      description: Get the user current stripe subscription 
      security:
        - theye_oauth:
          - write 
      responses:
        '200':
          description: OK. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/subscription' 
        '401':
          description: Unauthorized. 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /subscription/plans/:
    get:
      summary: TBD
      tags:
        - Frontend
      description: Get stripe plans (product and prices) 
      responses:
        '200':
          description: OK. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/subscription-plans' 
  /synchronization-nonce/:
    post:
      summary: Get a synchronization nonce.
      tags:
        - Mobile
        - Gateway
      description: Get server nonce for server-device time synchronization. 
      responses:
        '201':
          description: Created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/synchronization-nonce' 

  /synchronization-points/:
     post:
      summary: Create a synchronization point. TBD
      tags:
        - Mobile
        - Gateway
      description: |
        Create a server-device time synchronization point based on nonce previously 
        [retrieved](#path-/synchronization-nonce/). 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16 
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Synchronization code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/synchronization-code' 
      responses:
        '201':
          description: Created 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/synchronization-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status-response' 
  /server-code-request/:
    post:
      summary: Request a server code
      tags:
        - Mobile
        - Gateway
      description:  Create a server code (and send it to the client making the request). 
      responses:
        '201':
          description: Created 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/server-code'

