openapi: '3.0.2'
info:
  title: API THEye
  version: '0.16.0'
servers:
  - url: https://backend.theye.ch/api/v0

components:
  schemas:
    api-version:
      type: object
      properties:
        api_version:
          type: string
          format: semantic version number
          example: '1.2.3'
    status:
      type: object
      properties:
        status:
          type: object
          properties:
            code:
              type: string
              example: 400-000
            name:
              type: string
              format: string
              example: STATUS_NAME 
            description:
              type: string
              format: string
              example: Lorem ipsum. 
    my-client-configuration:
      type: object
      properties:
        version:
          type: string 
          example: '1.2.3'
        configuration:
          type: object
          example: {'custom_property_1': '10', 'custom_property_2':'23'}
             
    device:
      type: object
      properties:
        id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
          readOnly: true
        creation_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        modification_date:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
        name:
          type: string
          example: Device A
        owner:
          type: integer 
          example: 1 
          readOnly: true
        type:
          type: integer
          example: 10
          readOnly: true
        model:
          type: integer
          example: 11
          readOnly: true
        hardware:
          type: string
          example: 2.3
          readOnly: True
        is_active:
          type: boolean
          example: true
          readOnly: true
        device_info:
          type: object
          readOnly: true
          properties:
            creation_date:
              type: string
              format: iso-8601
              example: 2021-01-18T16:32:10.000000Z
              readOnly: true
            api_version:
              type: string
              format: semantic version number
              example: '1.2.3'
            info:
              type: object
              readOnly: true
              properties:
                info_version:
                  type: integer
                  example: 0
                type:
                  type: integer
                  example: 10
                model:
                  type: integer
                  example: 11
                firmware:
                  type: string
                  example: 1.2
                hardware:
                  type: string
                  example: 2.3
                device_id:
                  type: string 
                  format: base16
                  maxLength: 12 
                  minLength: 12 
                  example: 0123456789AB 
                time_id:
                  type: integer
                  example: "123456"
                local_name:
                  type: string
                  maxLength: 16
                  example: Kitchen
                battery_voltage:
                  type: integer
                  description: Battery voltage in mV [V]
                  example: "3300"
                log_interval:
                  type: object
                  properties:
                    interval:
                      type: integer 
                      description: Interval time in [s]
                      example: 10
                    stop_recording:
                      type: boolean
                      example: false
                    stop_memory_full:
                      type: boolean
                      example: true
                limits:
                  type: object
                  properties:
                    thresholds:
                      type: object
                      properties:
                        lowest_temperature:
                          type: integer
                          description: Temperature in 0.01 [°C] 
                        highest_temperature:
                          type: integer
                          description: Temperature in 0.01 [°C]
                        lowest_humidity:
                          type: integer
                          description: Humidity in 0.01 [%]
                        highest_humidity:
                          type: integer
                          description: Humidity in 0.01 [%]
                    alerts:
                      type: object
                      properties:
                        current_temperature:
                          type: boolean
                        past_temperature:
                          type: boolean
                        past_temperature_resettable:
                          type: boolean
                        current_humidity:
                          type: boolean
                        past_humidity:
                          type: boolean
                        past_humidity_resettable:
                          type: boolean
                    config:
                      type: object
                      properties:
                        hidden:
                          type: boolean
                        tested:
                          type: boolean
    devices:
      type: array
      items:
        type: object
        properties:
          id:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
            readOnly: true
          name:
            type: string
            example: Device A
          owner:
            type: integer 
            example: 1 
            readOnly: true
          type:
            type: integer
            example: 10
            readOnly: true
          model:
            type: integer
            example: 11
            readOnly: true
          hardware:
            type: string
            example: "2.3"
            readOnly: True
          battery_voltage:
            type: integer
            description: Battery voltage in mV [V]
            example: "3300"
          firmware:
            type: string
            example: "1.2"
          organization:
            type: object
            properties:
              id:
                type: integer
                example: 11
                readOnly: true
              name:
                type: string
                example: Company X 
    devices-summary:
      type: object
      properties:
        total:
          type: integer
          example: 52
        total_owners:
          type: integer
          example: 12 
        total_organizations:
          type: integer
          example: 40 
        owners:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                example : 314 
              total :
                type: integer
                example : 12 
        organizations:
          type: array
          items:
            type: object
            properties:
              id: 
                type: integer
                example : 315 
              total :
                type: integer
                example : 40 
    device-specification:
      type: object
      properties:
        name: 
          type: string
          example: 'TH-2'
          readOnly: true
        description:
          type: string
          example: 'Compact Bluetooth module for secure temperature and humidity recording.'
          readOnly: true
        type:
          type: integer 
          example: 52
          readOnly: true
        model: 
          type: integer
          example: 203
          readOnly: true
        hardware: 
          type: string 
          example: '3.1'
          readOnly: true
        is_active:
          type: boolean 
          example: true
          readOnly: true 
        voltage_low: 
          type: number
          example: 2600.0
          description: Lower voltage in [mV]
          readOnly: true
        voltage_high: 
          type: number
          example: 2900.0
          description: Higher voltage in [mV]
          readOnly: true
        percent_low: 
          type: number
          example: 20.0
          description: Lower value in [%]
          readOnly: true
        percent_high:
          type: number
          example: 80.0
          description: Higher value in [%]
          readOnly: true
        battery_capacity: 
          type: number
          example: 432.0
          description: Battery capacity in [mAh] 
          readOnly: true
        idle_current: 
          type: number
          example: 0.007 
          description: Idle current in [mA] 
          readOnly: true
        measurement_charge:
          type: number
          example: 0.01
          description: Electrical charge of one measurement in [mAs] 
          readOnly: true
    device-specifications:
      type: array
      items:
        $ref: '#/components/schemas/device-specification'
    elog:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        edata:
          type: string
          format: base64url 
          example: d3As065hUfzeLue21P69HxIix373+FLWtoMDru6PFdy9ZYLlD6yRuwEJCYAjhATu6LiJp340n7Imhhmmp5Xbm9ws7tKbGyGkxgG7GeJ8fak=
        hash:
          type: string 
          format: base16
          maxLength: 64 
          minLength: 64 
          example: 00112233445566778899AABBCCDDEEFF00112233445566778899AABBCCDDEEFF 
        initialization_vector:
          type: string 
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF 
        key_id:
          type: integer 
          example: 314 
    encrypted_data:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        encrypted_data:
          type: string
          format: base64url 
          example: d3As065hUfzeLue21P69HxIix373+FLWtoMDru6PFdy9ZYLlD6yRuwEJCYAjhATu6LiJp340n7Imhhmmp5Xbm9ws7tKbGyGkxgG7GeJ8fak=
        hash:
          type: string 
          format: base16
          maxLength: 64 
          minLength: 64 
          example: 00112233445566778899AABBCCDDEEFF00112233445566778899AABBCCDDEEFF 
        initialization_vector:
          type: string 
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF 
        key_id:
          type: integer 
          example: 314 
    lock-code:
      type: object
      properties:
        key_id:
          type: integer
          example: 314 
        lock_code: 
          type: string 
          format: base16
          maxLength: 16 
          minLength: 16 
          example: 0123456789ABCDEF
    lock-token:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
          readOnly: true
        lock_token: 
          type: string
          format: base16
          maxLength: 48 
          minLength: 48 
          example: 00112233445566778899AABBCCDDEEFF0123456789ABCDEF
          readOnly: true
    log:
      type: object
      properties:
        device_id:
          type: string
          format: hex48 
          example: 0123456789AB 
        time:
          type: array
          items: 
            type: integer
            description: Time in POSIX 
          example:
            - 10
            - 20 
            - 30 
        temperature:
          type: array
          items: 
            type: integer
            description: Temperature of the point (in 0.01 [°C]) 
          example:
            - 2500 
            - 2510 
            - 2490 
        humidity:
          type: array
          items: 
            type: integer
            description: Humidity of the point (in 0.01 [%]) 
          example:
            - 5000 
            - 5010 
            - 4990 
    ownership-code:
      type: object
      properties:
        code: 
          type: string 
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF 
          readOnly: true
        expires:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
    ownership-token:
      type: object
      properties:
        key_id: 
          type: integer
          example: 314 
        ownership_token:
          type: string
          format: base16
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF
    password:
      type: object
      properties:
        password:
          type: string
          example: SecretPa55word 
        new_password:
          type: string
          example: NewSecretPa55word 
    profile:
      type: object
      properties:
        id:
          type: integer
          example: 314
          readOnly: True
        email:
          type: string
          format:  email
          example: alice.wonderland@mail.com
        first_name:
          type: string
          example: Alice
        last_name:
          type: string
          example: Wonderland
        unicode_locale_id:
          type: string
          format: unicode locale identifier
          description: https://unicode.org/reports/tr35/
          example: 'en-US'
    synchronization-nonce:
      type: object
      properties:
        nonce:
          type: string 
          format: base16
          maxLength: 24 
          minLength: 24 
          example: 00112233445566778899AABB
          readOnly: true
        expires:
          type: string
          format: iso-8601
          example: 2021-01-18T16:32:10.000000Z
          readOnly: true
    synchronization-code:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
        key_id:
          type: integer
          example: 314 
        synchronization_code: 
          type: string 
          format: base16 
          maxLength: 32 
          minLength: 32 
          example: 00112233445566778899AABBCCDDEEFF
    synchronization-token:
      type: object
      properties:
        device_id:
          type: string 
          format: base16
          maxLength: 12 
          minLength: 12 
          example: 0123456789AB 
          readOnly: true
        synchronization_token: 
          type: string
          format: base16 
          maxLength: 48 
          minLength: 48 
          example: 00112233445566778899AABBCCDDEEFF0123456789ABCDEF
          readOnly: true

  securitySchemes:
    theye_oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://backend.theye.ch/o/authorize'
          tokenUrl: 'https://backend.theye.ch/o/token'
          scopes:
            'openid': OpenId Connect scope
            'read': Can read 
            'write': Can write 
    theye_oidc:
      type: openIdConnect
      openIdConnectUrl: 'https://backend.theye.ch/o/.well-known/openid-configuration'

paths:
  /:
    get:
      description: Get THEye API version. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/api-version'
  /devices/:
    get:
      description: Get all devices of the user.
      parameters:
        - name: owner 
          in : query
          description: Filter by device owner.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: organization 
          in : query
          description: Filter by organization.
          schema:
            type: array
            items:
              type: integer
              example: 314
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/devices' 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /devices/summary/:
    get:
      description: Get devices summary.
      parameters:
        - name: owner 
          in : query
          description: Filter by device owner.
          schema:
            type: array
            items:
              type: integer
              example: 314
        - name: organization 
          in : query
          description: Filter by organization.
          schema:
            type: array
            items:
              type: integer
              example: 314
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/devices-summary'
                  
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /devices/{device-id}/:
    get:
      description: Get device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
    put:
      description: Put device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Data of the device to update
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/device' 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, device updated 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 

  /devices/{device-id}/compute-lock-token:
    put:
      description: Compute and get the device lock token.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Lock Code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/lock-code' 
      security:
        - theye_oauth:
          - read 
      responses:
        '200': 
          description: Ok, lock-token delivered.  
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/lock-token' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /devices/{device-id}/log/:
    get:
      description: Get log of the device
      security:
        - theye_oauth:
          - read 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/log'
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /devices/{device-id}/own:
     put:
      description: Own the device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Owneship token 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/ownership-token' 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, ownership granted. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '201': 
          description: Ok, ownership granted and device created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /devices/{device-id}/release:
     put:
      description: Release ownership of the device.
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      security:
        - theye_oauth:
          - write 
      responses:
        '200': 
          description: Ok, ownership released. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '401':
          description: Unauthorized. 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /device-info/:
    post:
      description: Post encrypted device info. 
      requestBody:
        description: Encrypted device info 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/encrypted_data' 
      responses:
        '201':
          description: Created 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /discovery/device-specifications/:
    get:
      description: Get device specification list. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/device-specifications'
  /my-client-configuration/:
    get: 
      description: Get the client configuration of the current user and the current application. 
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/my-client-configuration' 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
    put: 
      description: Create or update the client configuration of the current user and the current application. 
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Configuration data 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/my-client-configuration' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/my-client-configuration' 
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/my-client-configuration' 
        '401':
          description: Unauthorized.
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 

  /elog/:
    put:
      description: Put encrypted log
      requestBody:
        description: Encrypted data 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/elog' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /ownership-code/: 
    post:
      description: Create and get an ownership code. 
      security:
        - theye_oauth:
          - write 
      responses:
        '201': 
          description: Ok, ownership code created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/ownership-code' 
        '401':
          description: Unauthorized.
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /profile/:
    get:
      description: Get user profile.
      security:
        - theye_oauth:
          - read 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/profile' 
        '401':
          description: Unauthorized 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
    put:
      description: Update the user profile.
      security:
        - theye_oauth:
          - write 
      requestBody:
        description: Data of the profile to update
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/profile' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/profile' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 

  /profile/password/:
    put:
      description: Update the user password. 
      security:
        - theye_oauth:
          - write
      requestBody:
        description: Passwords 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/password' 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '401':
          description: Unauthorized 
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
  /synchronization-nonce/:
    post:
      description: Get server nonce for server-device time synchronization. 
      responses:
        '201':
          description: Created. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/synchronization-nonce' 

  /synchronization-points/:
     post:
      description:  Create a server-device time synchronization point. 
      parameters:
        - name: device-id
          in: path
          required: true
          schema:
            type: string 
            format: base16 
            maxLength: 12 
            minLength: 12 
            example: 0123456789AB 
      requestBody:
        description: Synchronization code 
        required: true
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/synchronization-code' 
      responses:
        '201':
          description: Created 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/synchronization-token' 
        '400':
          description: Bad request. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '403':
          description: Forbidden. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '404':
          description: Not found. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '409':
          description: Conflict.
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 
        '500':
          description: Internal server error. 
          content:
            application/json:
              schema:
                $ref : '#/components/schemas/status' 